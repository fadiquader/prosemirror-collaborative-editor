{
  "{\"sourceRoot\":\"/Users/meeopp/Development/Others/editor-yjs/server/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/meeopp/Development/Others/editor-yjs/server\",\"filename\":\"/Users/meeopp/Development/Others/editor-yjs/server/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/meeopp/Development/Others/editor-yjs/server\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/meeopp/Development/Others/editor-yjs/server/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/meeopp/Development/Others/editor-yjs/server",
      "filename": "/Users/meeopp/Development/Others/editor-yjs/server/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/meeopp/Development/Others/editor-yjs/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/meeopp/Development/Others/editor-yjs/server/server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/meeopp/Development/Others/editor-yjs/server/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/meeopp/Development/Others/editor-yjs/server/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire(\"dotenv/config\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar WebSocket = require('ws');\n\nvar http = require('http');\n\nvar Y = require('yjs');\n\nvar encoding = require('lib0/encoding.js');\n\nvar decoding = require('lib0/decoding.js'); // const StaticServer = require('node-static').Server\n\n\nvar utils = require('y-websocket/bin/utils.js');\n\nvar production = process.env.PRODUCTION != null;\nvar port = process.env.PORT || 8080;\nvar server = http.createServer(function (request, response) {\n  response.writeHead(200, {\n    'Content-Type': 'text/plain'\n  });\n  response.end('okay');\n}); // const wss = new WebSocket.Server({ server })\n\nvar wss = new WebSocket.Server({\n  noServer: true\n});\nwss.on('connection', utils.setupWSConnection);\nserver.on('upgrade', function (request, socket, head) {\n  // You may check auth of request here..\n\n  /**\n   * @param {any} ws\n   */\n  var handleAuth = function handleAuth(ws) {\n    wss.emit('connection', ws, request);\n  };\n\n  wss.handleUpgrade(request, socket, head, handleAuth);\n});\nutils.setPersistence({\n  bindState: function () {\n    var _bindState = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(docName, ydoc) {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // console.log(ydoc)\n              // const persistedYdoc = await ldb.getYDoc(docName)\n              // const newUpdates = Y.encodeStateAsUpdate(ydoc)\n              // ldb.storeUpdate(docName, newUpdates)\n              // Y.applyUpdate(ydoc, Y.encodeStateAsUpdate(persistedYdoc))\n              ydoc.on('update', function (update) {\n                var ydoc = new Y.Doc();\n                Y.applyUpdate(ydoc, update);\n                var sv = Y.encodeStateVector(ydoc);\n                var encoder = encoding.createEncoder();\n                encoding.writeVarUint(encoder, 0);\n                encoding.writeVarUint8Array(encoder, sv);\n                var newState = encoding.toUint8Array(encoder); // const state = Y.encodeStateAsUpdate(ydoc);\n\n                console.log('newState ', newState); // ytext.insert(0, content);\n                // Y.applyUpdate(ydoc, Y.encodeStateAsUpdate(update))\n\n                console.log('update ', update); // ldb.storeUpdate(docName, update)\n              }); // console.log('bindState ', documentName)\n              // const state1 = Y.encodeStateAsUpdate(doc)\n              // console.log(state1)\n              // Here you listen to granular document updates and store them in the database\n              // You don't have to do this, but it ensures that you don't lose content when the server crashes\n              // See https://github.com/yjs/yjs#Document-Updates for documentation on how to encode\n              // document updates\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function bindState(_x, _x2) {\n      return _bindState.apply(this, arguments);\n    }\n\n    return bindState;\n  }(),\n  writeState: function writeState(string, doc) {\n    // This is called when all connections to the document are closed.\n    // In the future, this method might also be called in intervals or after a certain number of updates.\n    return new Promise(function (resolve) {\n      // console.log('writeState ', string)\n      // When the returned Promise resolves, the document will be destroyed.\n      // So make sure that the document really has been written to the database.\n      resolve();\n    });\n  }\n});\nserver.listen(port);\nconsole.log(\"Listening to http://localhost:\".concat(port, \" \").concat(production ? '(production)' : ''));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJXZWJTb2NrZXQiLCJyZXF1aXJlIiwiaHR0cCIsIlkiLCJlbmNvZGluZyIsImRlY29kaW5nIiwidXRpbHMiLCJwcm9kdWN0aW9uIiwicHJvY2VzcyIsImVudiIsIlBST0RVQ1RJT04iLCJwb3J0IiwiUE9SVCIsInNlcnZlciIsImNyZWF0ZVNlcnZlciIsInJlcXVlc3QiLCJyZXNwb25zZSIsIndyaXRlSGVhZCIsImVuZCIsIndzcyIsIlNlcnZlciIsIm5vU2VydmVyIiwib24iLCJzZXR1cFdTQ29ubmVjdGlvbiIsInNvY2tldCIsImhlYWQiLCJoYW5kbGVBdXRoIiwid3MiLCJlbWl0IiwiaGFuZGxlVXBncmFkZSIsInNldFBlcnNpc3RlbmNlIiwiYmluZFN0YXRlIiwiZG9jTmFtZSIsInlkb2MiLCJ1cGRhdGUiLCJEb2MiLCJhcHBseVVwZGF0ZSIsInN2IiwiZW5jb2RlU3RhdGVWZWN0b3IiLCJlbmNvZGVyIiwiY3JlYXRlRW5jb2RlciIsIndyaXRlVmFyVWludCIsIndyaXRlVmFyVWludDhBcnJheSIsIm5ld1N0YXRlIiwidG9VaW50OEFycmF5IiwiY29uc29sZSIsImxvZyIsIndyaXRlU3RhdGUiLCJzdHJpbmciLCJkb2MiLCJQcm9taXNlIiwicmVzb2x2ZSIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7QUFHQTs7Ozs7O0FBQ0EsSUFBTUEsU0FBUyxHQUFHQyxPQUFPLENBQUMsSUFBRCxDQUF6Qjs7QUFDQSxJQUFNQyxJQUFJLEdBQUdELE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLElBQU1FLENBQUMsR0FBR0YsT0FBTyxDQUFDLEtBQUQsQ0FBakI7O0FBQ0EsSUFBTUcsUUFBUSxHQUFHSCxPQUFPLENBQUMsa0JBQUQsQ0FBeEI7O0FBQ0EsSUFBTUksUUFBUSxHQUFHSixPQUFPLENBQUMsa0JBQUQsQ0FBeEIsQyxDQUNBOzs7QUFDQSxJQUFNSyxLQUFLLEdBQUdMLE9BQU8sQ0FBQywwQkFBRCxDQUFyQjs7QUFF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QTJDQXRDLE1BQU0sQ0FBQ3VDLE1BQVAsQ0FBY3pDLElBQWQ7QUFFQWtDLE9BQU8sQ0FBQ0MsR0FBUix5Q0FBNkNuQyxJQUE3QyxjQUFxREosVUFBVSxHQUFHLGNBQUgsR0FBb0IsRUFBbkYiLCJzb3VyY2VSb290IjoiL1VzZXJzL21lZW9wcC9EZXZlbG9wbWVudC9PdGhlcnMvZWRpdG9yLXlqcy9zZXJ2ZXIvIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAdHlwZSB7YW55fVxuICovXG5pbXBvcnQgJ2RvdGVudi9jb25maWcnO1xuY29uc3QgV2ViU29ja2V0ID0gcmVxdWlyZSgnd3MnKVxuY29uc3QgaHR0cCA9IHJlcXVpcmUoJ2h0dHAnKVxuY29uc3QgWSA9IHJlcXVpcmUoJ3lqcycpXG5jb25zdCBlbmNvZGluZyA9IHJlcXVpcmUoJ2xpYjAvZW5jb2RpbmcuanMnKTtcbmNvbnN0IGRlY29kaW5nID0gcmVxdWlyZSgnbGliMC9kZWNvZGluZy5qcycpO1xuLy8gY29uc3QgU3RhdGljU2VydmVyID0gcmVxdWlyZSgnbm9kZS1zdGF0aWMnKS5TZXJ2ZXJcbmNvbnN0IHV0aWxzID0gcmVxdWlyZSgneS13ZWJzb2NrZXQvYmluL3V0aWxzLmpzJyk7XG5cbmNvbnN0IHByb2R1Y3Rpb24gPSBwcm9jZXNzLmVudi5QUk9EVUNUSU9OICE9IG51bGxcbmNvbnN0IHBvcnQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IDgwODBcblxuXG5jb25zdCBzZXJ2ZXIgPSBodHRwLmNyZWF0ZVNlcnZlcigocmVxdWVzdCwgcmVzcG9uc2UpID0+IHtcbiAgICByZXNwb25zZS53cml0ZUhlYWQoMjAwLCB7ICdDb250ZW50LVR5cGUnOiAndGV4dC9wbGFpbicgfSlcbiAgICByZXNwb25zZS5lbmQoJ29rYXknKVxufSk7XG5cbi8vIGNvbnN0IHdzcyA9IG5ldyBXZWJTb2NrZXQuU2VydmVyKHsgc2VydmVyIH0pXG5jb25zdCB3c3MgPSBuZXcgV2ViU29ja2V0LlNlcnZlcih7ICBub1NlcnZlcjogdHJ1ZSB9KVxuXG53c3Mub24oJ2Nvbm5lY3Rpb24nLCB1dGlscy5zZXR1cFdTQ29ubmVjdGlvbik7XG5zZXJ2ZXIub24oJ3VwZ3JhZGUnLCAocmVxdWVzdCwgc29ja2V0LCBoZWFkKSA9PiB7XG4gIC8vIFlvdSBtYXkgY2hlY2sgYXV0aCBvZiByZXF1ZXN0IGhlcmUuLlxuICAvKipcbiAgICogQHBhcmFtIHthbnl9IHdzXG4gICAqL1xuICBjb25zdCBoYW5kbGVBdXRoID0gd3MgPT4ge1xuICAgIHdzcy5lbWl0KCdjb25uZWN0aW9uJywgd3MsIHJlcXVlc3QpXG4gIH1cbiAgd3NzLmhhbmRsZVVwZ3JhZGUocmVxdWVzdCwgc29ja2V0LCBoZWFkLCBoYW5kbGVBdXRoKVxufSk7XG5cbnV0aWxzLnNldFBlcnNpc3RlbmNlKHtcbiAgYmluZFN0YXRlOiBhc3luYyAoZG9jTmFtZSwgeWRvYykgPT4ge1xuICAgIC8vIGNvbnNvbGUubG9nKHlkb2MpXG4gICAgLy8gY29uc3QgcGVyc2lzdGVkWWRvYyA9IGF3YWl0IGxkYi5nZXRZRG9jKGRvY05hbWUpXG4gICAgLy8gY29uc3QgbmV3VXBkYXRlcyA9IFkuZW5jb2RlU3RhdGVBc1VwZGF0ZSh5ZG9jKVxuICAgIC8vIGxkYi5zdG9yZVVwZGF0ZShkb2NOYW1lLCBuZXdVcGRhdGVzKVxuICAgIC8vIFkuYXBwbHlVcGRhdGUoeWRvYywgWS5lbmNvZGVTdGF0ZUFzVXBkYXRlKHBlcnNpc3RlZFlkb2MpKVxuICAgIHlkb2Mub24oJ3VwZGF0ZScsIHVwZGF0ZSA9PiB7XG4gICAgICBjb25zdCB5ZG9jID0gbmV3IFkuRG9jKCk7XG4gICAgICBZLmFwcGx5VXBkYXRlKHlkb2MsIHVwZGF0ZSlcbiAgICAgIGNvbnN0IHN2ID0gWS5lbmNvZGVTdGF0ZVZlY3Rvcih5ZG9jKTtcbiAgICAgIGNvbnN0IGVuY29kZXIgPSBlbmNvZGluZy5jcmVhdGVFbmNvZGVyKClcbiAgICAgIGVuY29kaW5nLndyaXRlVmFyVWludChlbmNvZGVyLCAwKTtcbiAgICAgIGVuY29kaW5nLndyaXRlVmFyVWludDhBcnJheShlbmNvZGVyLCBzdik7XG4gICAgICBjb25zdCBuZXdTdGF0ZSA9IGVuY29kaW5nLnRvVWludDhBcnJheShlbmNvZGVyKVxuICAgICAgLy8gY29uc3Qgc3RhdGUgPSBZLmVuY29kZVN0YXRlQXNVcGRhdGUoeWRvYyk7XG4gICAgICBjb25zb2xlLmxvZygnbmV3U3RhdGUgJywgbmV3U3RhdGUpXG4gICAgICAvLyB5dGV4dC5pbnNlcnQoMCwgY29udGVudCk7XG4gICAgICAvLyBZLmFwcGx5VXBkYXRlKHlkb2MsIFkuZW5jb2RlU3RhdGVBc1VwZGF0ZSh1cGRhdGUpKVxuICAgICAgY29uc29sZS5sb2coJ3VwZGF0ZSAnLCB1cGRhdGUpXG4gICAgICAvLyBsZGIuc3RvcmVVcGRhdGUoZG9jTmFtZSwgdXBkYXRlKVxuICAgIH0pXG5cbiAgICAvLyBjb25zb2xlLmxvZygnYmluZFN0YXRlICcsIGRvY3VtZW50TmFtZSlcbiAgICAvLyBjb25zdCBzdGF0ZTEgPSBZLmVuY29kZVN0YXRlQXNVcGRhdGUoZG9jKVxuICAgIC8vIGNvbnNvbGUubG9nKHN0YXRlMSlcbiAgICAvLyBIZXJlIHlvdSBsaXN0ZW4gdG8gZ3JhbnVsYXIgZG9jdW1lbnQgdXBkYXRlcyBhbmQgc3RvcmUgdGhlbSBpbiB0aGUgZGF0YWJhc2VcbiAgICAvLyBZb3UgZG9uJ3QgaGF2ZSB0byBkbyB0aGlzLCBidXQgaXQgZW5zdXJlcyB0aGF0IHlvdSBkb24ndCBsb3NlIGNvbnRlbnQgd2hlbiB0aGUgc2VydmVyIGNyYXNoZXNcbiAgICAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3lqcy95anMjRG9jdW1lbnQtVXBkYXRlcyBmb3IgZG9jdW1lbnRhdGlvbiBvbiBob3cgdG8gZW5jb2RlXG4gICAgLy8gZG9jdW1lbnQgdXBkYXRlc1xuICB9LFxuICB3cml0ZVN0YXRlOiAoc3RyaW5nLCBkb2MpID0+IHtcbiAgICAvLyBUaGlzIGlzIGNhbGxlZCB3aGVuIGFsbCBjb25uZWN0aW9ucyB0byB0aGUgZG9jdW1lbnQgYXJlIGNsb3NlZC5cbiAgICAvLyBJbiB0aGUgZnV0dXJlLCB0aGlzIG1ldGhvZCBtaWdodCBhbHNvIGJlIGNhbGxlZCBpbiBpbnRlcnZhbHMgb3IgYWZ0ZXIgYSBjZXJ0YWluIG51bWJlciBvZiB1cGRhdGVzLlxuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgIC8vIGNvbnNvbGUubG9nKCd3cml0ZVN0YXRlICcsIHN0cmluZylcbiAgICAgIC8vIFdoZW4gdGhlIHJldHVybmVkIFByb21pc2UgcmVzb2x2ZXMsIHRoZSBkb2N1bWVudCB3aWxsIGJlIGRlc3Ryb3llZC5cbiAgICAgIC8vIFNvIG1ha2Ugc3VyZSB0aGF0IHRoZSBkb2N1bWVudCByZWFsbHkgaGFzIGJlZW4gd3JpdHRlbiB0byB0aGUgZGF0YWJhc2UuXG4gICAgICByZXNvbHZlKClcbiAgICB9KVxuICB9XG59KVxuXG5zZXJ2ZXIubGlzdGVuKHBvcnQpO1xuXG5jb25zb2xlLmxvZyhgTGlzdGVuaW5nIHRvIGh0dHA6Ly9sb2NhbGhvc3Q6JHtwb3J0fSAke3Byb2R1Y3Rpb24gPyAnKHByb2R1Y3Rpb24pJyA6ICcnfWApXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "WebSocket",
        "require",
        "http",
        "Y",
        "encoding",
        "decoding",
        "utils",
        "production",
        "process",
        "env",
        "PRODUCTION",
        "port",
        "PORT",
        "server",
        "createServer",
        "request",
        "response",
        "writeHead",
        "end",
        "wss",
        "Server",
        "noServer",
        "on",
        "setupWSConnection",
        "socket",
        "head",
        "handleAuth",
        "ws",
        "emit",
        "handleUpgrade",
        "setPersistence",
        "bindState",
        "docName",
        "ydoc",
        "update",
        "Doc",
        "applyUpdate",
        "sv",
        "encodeStateVector",
        "encoder",
        "createEncoder",
        "writeVarUint",
        "writeVarUint8Array",
        "newState",
        "toUint8Array",
        "console",
        "log",
        "writeState",
        "string",
        "doc",
        "Promise",
        "resolve",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/meeopp/Development/Others/editor-yjs/server/",
      "sourcesContent": [
        "/**\n * @type {any}\n */\nimport 'dotenv/config';\nconst WebSocket = require('ws')\nconst http = require('http')\nconst Y = require('yjs')\nconst encoding = require('lib0/encoding.js');\nconst decoding = require('lib0/decoding.js');\n// const StaticServer = require('node-static').Server\nconst utils = require('y-websocket/bin/utils.js');\n\nconst production = process.env.PRODUCTION != null\nconst port = process.env.PORT || 8080\n\n\nconst server = http.createServer((request, response) => {\n    response.writeHead(200, { 'Content-Type': 'text/plain' })\n    response.end('okay')\n});\n\n// const wss = new WebSocket.Server({ server })\nconst wss = new WebSocket.Server({  noServer: true })\n\nwss.on('connection', utils.setupWSConnection);\nserver.on('upgrade', (request, socket, head) => {\n  // You may check auth of request here..\n  /**\n   * @param {any} ws\n   */\n  const handleAuth = ws => {\n    wss.emit('connection', ws, request)\n  }\n  wss.handleUpgrade(request, socket, head, handleAuth)\n});\n\nutils.setPersistence({\n  bindState: async (docName, ydoc) => {\n    // console.log(ydoc)\n    // const persistedYdoc = await ldb.getYDoc(docName)\n    // const newUpdates = Y.encodeStateAsUpdate(ydoc)\n    // ldb.storeUpdate(docName, newUpdates)\n    // Y.applyUpdate(ydoc, Y.encodeStateAsUpdate(persistedYdoc))\n    ydoc.on('update', update => {\n      const ydoc = new Y.Doc();\n      Y.applyUpdate(ydoc, update)\n      const sv = Y.encodeStateVector(ydoc);\n      const encoder = encoding.createEncoder()\n      encoding.writeVarUint(encoder, 0);\n      encoding.writeVarUint8Array(encoder, sv);\n      const newState = encoding.toUint8Array(encoder)\n      // const state = Y.encodeStateAsUpdate(ydoc);\n      console.log('newState ', newState)\n      // ytext.insert(0, content);\n      // Y.applyUpdate(ydoc, Y.encodeStateAsUpdate(update))\n      console.log('update ', update)\n      // ldb.storeUpdate(docName, update)\n    })\n\n    // console.log('bindState ', documentName)\n    // const state1 = Y.encodeStateAsUpdate(doc)\n    // console.log(state1)\n    // Here you listen to granular document updates and store them in the database\n    // You don't have to do this, but it ensures that you don't lose content when the server crashes\n    // See https://github.com/yjs/yjs#Document-Updates for documentation on how to encode\n    // document updates\n  },\n  writeState: (string, doc) => {\n    // This is called when all connections to the document are closed.\n    // In the future, this method might also be called in intervals or after a certain number of updates.\n    return new Promise(resolve => {\n      // console.log('writeState ', string)\n      // When the returned Promise resolves, the document will be destroyed.\n      // So make sure that the document really has been written to the database.\n      resolve()\n    })\n  }\n})\n\nserver.listen(port);\n\nconsole.log(`Listening to http://localhost:${port} ${production ? '(production)' : ''}`)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594713071181
  },
  "{\"sourceRoot\":\"/Users/meeopp/Development/Others/editor-yjs/server/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/meeopp/Development/Others/editor-yjs/server\",\"filename\":\"/Users/meeopp/Development/Others/editor-yjs/server/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/meeopp/Development/Others/editor-yjs/server\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/meeopp/Development/Others/editor-yjs/server/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/meeopp/Development/Others/editor-yjs/server",
      "filename": "/Users/meeopp/Development/Others/editor-yjs/server/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/meeopp/Development/Others/editor-yjs/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/meeopp/Development/Others/editor-yjs/server/server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/meeopp/Development/Others/editor-yjs/server/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/meeopp/Development/Others/editor-yjs/server/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nrequire(\"dotenv/config\");\n\nvar encoding = _interopRequireWildcard(require(\"lib0/encoding\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// const decoding = require('lib0/decoding.js');\nvar WebSocket = require('ws');\n\nvar http = require('http');\n\nvar Y = require('yjs'); // const StaticServer = require('node-static').Server\n\n\nvar utils = require('y-websocket/bin/utils.js');\n\nvar production = process.env.PRODUCTION != null;\nvar port = process.env.PORT || 8080;\nvar server = http.createServer(function (request, response) {\n  response.writeHead(200, {\n    'Content-Type': 'text/plain'\n  });\n  response.end('okay');\n}); // const wss = new WebSocket.Server({ server })\n\nvar wss = new WebSocket.Server({\n  noServer: true\n});\nwss.on('connection', utils.setupWSConnection);\nserver.on('upgrade', function (request, socket, head) {\n  // You may check auth of request here..\n\n  /**\n   * @param {any} ws\n   */\n  var handleAuth = function handleAuth(ws) {\n    wss.emit('connection', ws, request);\n  };\n\n  wss.handleUpgrade(request, socket, head, handleAuth);\n});\nutils.setPersistence({\n  bindState: function () {\n    var _bindState = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(docName, ydoc) {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // console.log(ydoc)\n              // const persistedYdoc = await ldb.getYDoc(docName)\n              // const newUpdates = Y.encodeStateAsUpdate(ydoc)\n              // ldb.storeUpdate(docName, newUpdates)\n              // Y.applyUpdate(ydoc, Y.encodeStateAsUpdate(persistedYdoc))\n              ydoc.on('update', function (update) {\n                var ydoc = new Y.Doc();\n                Y.applyUpdate(ydoc, update);\n                var sv = Y.encodeStateVector(ydoc);\n                var encoder = encoding.createEncoder();\n                encoding.writeVarUint(encoder, 0);\n                encoding.writeVarUint8Array(encoder, sv);\n                var newState = encoding.toUint8Array(encoder); // const state = Y.encodeStateAsUpdate(ydoc);\n\n                console.log('newState ', newState); // ytext.insert(0, content);\n                // Y.applyUpdate(ydoc, Y.encodeStateAsUpdate(update))\n\n                console.log('update ', update); // ldb.storeUpdate(docName, update)\n              }); // console.log('bindState ', documentName)\n              // const state1 = Y.encodeStateAsUpdate(doc)\n              // console.log(state1)\n              // Here you listen to granular document updates and store them in the database\n              // You don't have to do this, but it ensures that you don't lose content when the server crashes\n              // See https://github.com/yjs/yjs#Document-Updates for documentation on how to encode\n              // document updates\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function bindState(_x, _x2) {\n      return _bindState.apply(this, arguments);\n    }\n\n    return bindState;\n  }(),\n  writeState: function writeState(string, doc) {\n    // This is called when all connections to the document are closed.\n    // In the future, this method might also be called in intervals or after a certain number of updates.\n    return new Promise(function (resolve) {\n      // console.log('writeState ', string)\n      // When the returned Promise resolves, the document will be destroyed.\n      // So make sure that the document really has been written to the database.\n      resolve();\n    });\n  }\n});\nserver.listen(port);\nconsole.log(\"Listening to http://localhost:\".concat(port, \" \").concat(production ? '(production)' : ''));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJXZWJTb2NrZXQiLCJyZXF1aXJlIiwiaHR0cCIsIlkiLCJ1dGlscyIsInByb2R1Y3Rpb24iLCJwcm9jZXNzIiwiZW52IiwiUFJPRFVDVElPTiIsInBvcnQiLCJQT1JUIiwic2VydmVyIiwiY3JlYXRlU2VydmVyIiwicmVxdWVzdCIsInJlc3BvbnNlIiwid3JpdGVIZWFkIiwiZW5kIiwid3NzIiwiU2VydmVyIiwibm9TZXJ2ZXIiLCJvbiIsInNldHVwV1NDb25uZWN0aW9uIiwic29ja2V0IiwiaGVhZCIsImhhbmRsZUF1dGgiLCJ3cyIsImVtaXQiLCJoYW5kbGVVcGdyYWRlIiwic2V0UGVyc2lzdGVuY2UiLCJiaW5kU3RhdGUiLCJkb2NOYW1lIiwieWRvYyIsInVwZGF0ZSIsIkRvYyIsImFwcGx5VXBkYXRlIiwic3YiLCJlbmNvZGVTdGF0ZVZlY3RvciIsImVuY29kZXIiLCJlbmNvZGluZyIsImNyZWF0ZUVuY29kZXIiLCJ3cml0ZVZhclVpbnQiLCJ3cml0ZVZhclVpbnQ4QXJyYXkiLCJuZXdTdGF0ZSIsInRvVWludDhBcnJheSIsImNvbnNvbGUiLCJsb2ciLCJ3cml0ZVN0YXRlIiwic3RyaW5nIiwiZG9jIiwiUHJvbWlzZSIsInJlc29sdmUiLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiI7Ozs7QUFHQTs7QUFDQTs7Ozs7Ozs7OztBQUNBO0FBRUEsSUFBTUEsU0FBUyxHQUFHQyxPQUFPLENBQUMsSUFBRCxDQUF6Qjs7QUFDQSxJQUFNQyxJQUFJLEdBQUdELE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLElBQU1FLENBQUMsR0FBR0YsT0FBTyxDQUFDLEtBQUQsQ0FBakIsQyxDQUNBOzs7QUFDQSxJQUFNRyxLQUFLLEdBQUdILE9BQU8sQ0FBQywwQkFBRCxDQUFyQjs7QUFFQSxJQUFNSSxVQUFVLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxVQUFaLElBQTBCLElBQTdDO0FBQ0EsSUFBTUMsSUFBSSxHQUFHSCxPQUFP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QUFILEdBQW9CLEVBQW5GIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9tZWVvcHAvRGV2ZWxvcG1lbnQvT3RoZXJzL2VkaXRvci15anMvc2VydmVyLyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHR5cGUge2FueX1cbiAqL1xuaW1wb3J0ICdkb3RlbnYvY29uZmlnJztcbmltcG9ydCAqIGFzIGVuY29kaW5nIGZyb20gJ2xpYjAvZW5jb2RpbmcnO1xuLy8gY29uc3QgZGVjb2RpbmcgPSByZXF1aXJlKCdsaWIwL2RlY29kaW5nLmpzJyk7XG5cbmNvbnN0IFdlYlNvY2tldCA9IHJlcXVpcmUoJ3dzJylcbmNvbnN0IGh0dHAgPSByZXF1aXJlKCdodHRwJylcbmNvbnN0IFkgPSByZXF1aXJlKCd5anMnKTtcbi8vIGNvbnN0IFN0YXRpY1NlcnZlciA9IHJlcXVpcmUoJ25vZGUtc3RhdGljJykuU2VydmVyXG5jb25zdCB1dGlscyA9IHJlcXVpcmUoJ3ktd2Vic29ja2V0L2Jpbi91dGlscy5qcycpO1xuXG5jb25zdCBwcm9kdWN0aW9uID0gcHJvY2Vzcy5lbnYuUFJPRFVDVElPTiAhPSBudWxsXG5jb25zdCBwb3J0ID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCA4MDgwXG5cblxuY29uc3Qgc2VydmVyID0gaHR0cC5jcmVhdGVTZXJ2ZXIoKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XG4gICAgcmVzcG9uc2Uud3JpdGVIZWFkKDIwMCwgeyAnQ29udGVudC1UeXBlJzogJ3RleHQvcGxhaW4nIH0pXG4gICAgcmVzcG9uc2UuZW5kKCdva2F5Jylcbn0pO1xuXG4vLyBjb25zdCB3c3MgPSBuZXcgV2ViU29ja2V0LlNlcnZlcih7IHNlcnZlciB9KVxuY29uc3Qgd3NzID0gbmV3IFdlYlNvY2tldC5TZXJ2ZXIoeyAgbm9TZXJ2ZXI6IHRydWUgfSlcblxud3NzLm9uKCdjb25uZWN0aW9uJywgdXRpbHMuc2V0dXBXU0Nvbm5lY3Rpb24pO1xuc2VydmVyLm9uKCd1cGdyYWRlJywgKHJlcXVlc3QsIHNvY2tldCwgaGVhZCkgPT4ge1xuICAvLyBZb3UgbWF5IGNoZWNrIGF1dGggb2YgcmVxdWVzdCBoZXJlLi5cbiAgLyoqXG4gICAqIEBwYXJhbSB7YW55fSB3c1xuICAgKi9cbiAgY29uc3QgaGFuZGxlQXV0aCA9IHdzID0+IHtcbiAgICB3c3MuZW1pdCgnY29ubmVjdGlvbicsIHdzLCByZXF1ZXN0KVxuICB9XG4gIHdzcy5oYW5kbGVVcGdyYWRlKHJlcXVlc3QsIHNvY2tldCwgaGVhZCwgaGFuZGxlQXV0aClcbn0pO1xuXG51dGlscy5zZXRQZXJzaXN0ZW5jZSh7XG4gIGJpbmRTdGF0ZTogYXN5bmMgKGRvY05hbWUsIHlkb2MpID0+IHtcbiAgICAvLyBjb25zb2xlLmxvZyh5ZG9jKVxuICAgIC8vIGNvbnN0IHBlcnNpc3RlZFlkb2MgPSBhd2FpdCBsZGIuZ2V0WURvYyhkb2NOYW1lKVxuICAgIC8vIGNvbnN0IG5ld1VwZGF0ZXMgPSBZLmVuY29kZVN0YXRlQXNVcGRhdGUoeWRvYylcbiAgICAvLyBsZGIuc3RvcmVVcGRhdGUoZG9jTmFtZSwgbmV3VXBkYXRlcylcbiAgICAvLyBZLmFwcGx5VXBkYXRlKHlkb2MsIFkuZW5jb2RlU3RhdGVBc1VwZGF0ZShwZXJzaXN0ZWRZZG9jKSlcbiAgICB5ZG9jLm9uKCd1cGRhdGUnLCB1cGRhdGUgPT4ge1xuICAgICAgY29uc3QgeWRvYyA9IG5ldyBZLkRvYygpO1xuICAgICAgWS5hcHBseVVwZGF0ZSh5ZG9jLCB1cGRhdGUpXG4gICAgICBjb25zdCBzdiA9IFkuZW5jb2RlU3RhdGVWZWN0b3IoeWRvYyk7XG4gICAgICBjb25zdCBlbmNvZGVyID0gZW5jb2RpbmcuY3JlYXRlRW5jb2RlcigpXG4gICAgICBlbmNvZGluZy53cml0ZVZhclVpbnQoZW5jb2RlciwgMCk7XG4gICAgICBlbmNvZGluZy53cml0ZVZhclVpbnQ4QXJyYXkoZW5jb2Rlciwgc3YpO1xuICAgICAgY29uc3QgbmV3U3RhdGUgPSBlbmNvZGluZy50b1VpbnQ4QXJyYXkoZW5jb2RlcilcbiAgICAgIC8vIGNvbnN0IHN0YXRlID0gWS5lbmNvZGVTdGF0ZUFzVXBkYXRlKHlkb2MpO1xuICAgICAgY29uc29sZS5sb2coJ25ld1N0YXRlICcsIG5ld1N0YXRlKVxuICAgICAgLy8geXRleHQuaW5zZXJ0KDAsIGNvbnRlbnQpO1xuICAgICAgLy8gWS5hcHBseVVwZGF0ZSh5ZG9jLCBZLmVuY29kZVN0YXRlQXNVcGRhdGUodXBkYXRlKSlcbiAgICAgIGNvbnNvbGUubG9nKCd1cGRhdGUgJywgdXBkYXRlKVxuICAgICAgLy8gbGRiLnN0b3JlVXBkYXRlKGRvY05hbWUsIHVwZGF0ZSlcbiAgICB9KVxuXG4gICAgLy8gY29uc29sZS5sb2coJ2JpbmRTdGF0ZSAnLCBkb2N1bWVudE5hbWUpXG4gICAgLy8gY29uc3Qgc3RhdGUxID0gWS5lbmNvZGVTdGF0ZUFzVXBkYXRlKGRvYylcbiAgICAvLyBjb25zb2xlLmxvZyhzdGF0ZTEpXG4gICAgLy8gSGVyZSB5b3UgbGlzdGVuIHRvIGdyYW51bGFyIGRvY3VtZW50IHVwZGF0ZXMgYW5kIHN0b3JlIHRoZW0gaW4gdGhlIGRhdGFiYXNlXG4gICAgLy8gWW91IGRvbid0IGhhdmUgdG8gZG8gdGhpcywgYnV0IGl0IGVuc3VyZXMgdGhhdCB5b3UgZG9uJ3QgbG9zZSBjb250ZW50IHdoZW4gdGhlIHNlcnZlciBjcmFzaGVzXG4gICAgLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS95anMveWpzI0RvY3VtZW50LVVwZGF0ZXMgZm9yIGRvY3VtZW50YXRpb24gb24gaG93IHRvIGVuY29kZVxuICAgIC8vIGRvY3VtZW50IHVwZGF0ZXNcbiAgfSxcbiAgd3JpdGVTdGF0ZTogKHN0cmluZywgZG9jKSA9PiB7XG4gICAgLy8gVGhpcyBpcyBjYWxsZWQgd2hlbiBhbGwgY29ubmVjdGlvbnMgdG8gdGhlIGRvY3VtZW50IGFyZSBjbG9zZWQuXG4gICAgLy8gSW4gdGhlIGZ1dHVyZSwgdGhpcyBtZXRob2QgbWlnaHQgYWxzbyBiZSBjYWxsZWQgaW4gaW50ZXJ2YWxzIG9yIGFmdGVyIGEgY2VydGFpbiBudW1iZXIgb2YgdXBkYXRlcy5cbiAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICAvLyBjb25zb2xlLmxvZygnd3JpdGVTdGF0ZSAnLCBzdHJpbmcpXG4gICAgICAvLyBXaGVuIHRoZSByZXR1cm5lZCBQcm9taXNlIHJlc29sdmVzLCB0aGUgZG9jdW1lbnQgd2lsbCBiZSBkZXN0cm95ZWQuXG4gICAgICAvLyBTbyBtYWtlIHN1cmUgdGhhdCB0aGUgZG9jdW1lbnQgcmVhbGx5IGhhcyBiZWVuIHdyaXR0ZW4gdG8gdGhlIGRhdGFiYXNlLlxuICAgICAgcmVzb2x2ZSgpXG4gICAgfSlcbiAgfVxufSlcblxuc2VydmVyLmxpc3Rlbihwb3J0KTtcblxuY29uc29sZS5sb2coYExpc3RlbmluZyB0byBodHRwOi8vbG9jYWxob3N0OiR7cG9ydH0gJHtwcm9kdWN0aW9uID8gJyhwcm9kdWN0aW9uKScgOiAnJ31gKVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "WebSocket",
        "require",
        "http",
        "Y",
        "utils",
        "production",
        "process",
        "env",
        "PRODUCTION",
        "port",
        "PORT",
        "server",
        "createServer",
        "request",
        "response",
        "writeHead",
        "end",
        "wss",
        "Server",
        "noServer",
        "on",
        "setupWSConnection",
        "socket",
        "head",
        "handleAuth",
        "ws",
        "emit",
        "handleUpgrade",
        "setPersistence",
        "bindState",
        "docName",
        "ydoc",
        "update",
        "Doc",
        "applyUpdate",
        "sv",
        "encodeStateVector",
        "encoder",
        "encoding",
        "createEncoder",
        "writeVarUint",
        "writeVarUint8Array",
        "newState",
        "toUint8Array",
        "console",
        "log",
        "writeState",
        "string",
        "doc",
        "Promise",
        "resolve",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/meeopp/Development/Others/editor-yjs/server/",
      "sourcesContent": [
        "/**\n * @type {any}\n */\nimport 'dotenv/config';\nimport * as encoding from 'lib0/encoding';\n// const decoding = require('lib0/decoding.js');\n\nconst WebSocket = require('ws')\nconst http = require('http')\nconst Y = require('yjs');\n// const StaticServer = require('node-static').Server\nconst utils = require('y-websocket/bin/utils.js');\n\nconst production = process.env.PRODUCTION != null\nconst port = process.env.PORT || 8080\n\n\nconst server = http.createServer((request, response) => {\n    response.writeHead(200, { 'Content-Type': 'text/plain' })\n    response.end('okay')\n});\n\n// const wss = new WebSocket.Server({ server })\nconst wss = new WebSocket.Server({  noServer: true })\n\nwss.on('connection', utils.setupWSConnection);\nserver.on('upgrade', (request, socket, head) => {\n  // You may check auth of request here..\n  /**\n   * @param {any} ws\n   */\n  const handleAuth = ws => {\n    wss.emit('connection', ws, request)\n  }\n  wss.handleUpgrade(request, socket, head, handleAuth)\n});\n\nutils.setPersistence({\n  bindState: async (docName, ydoc) => {\n    // console.log(ydoc)\n    // const persistedYdoc = await ldb.getYDoc(docName)\n    // const newUpdates = Y.encodeStateAsUpdate(ydoc)\n    // ldb.storeUpdate(docName, newUpdates)\n    // Y.applyUpdate(ydoc, Y.encodeStateAsUpdate(persistedYdoc))\n    ydoc.on('update', update => {\n      const ydoc = new Y.Doc();\n      Y.applyUpdate(ydoc, update)\n      const sv = Y.encodeStateVector(ydoc);\n      const encoder = encoding.createEncoder()\n      encoding.writeVarUint(encoder, 0);\n      encoding.writeVarUint8Array(encoder, sv);\n      const newState = encoding.toUint8Array(encoder)\n      // const state = Y.encodeStateAsUpdate(ydoc);\n      console.log('newState ', newState)\n      // ytext.insert(0, content);\n      // Y.applyUpdate(ydoc, Y.encodeStateAsUpdate(update))\n      console.log('update ', update)\n      // ldb.storeUpdate(docName, update)\n    })\n\n    // console.log('bindState ', documentName)\n    // const state1 = Y.encodeStateAsUpdate(doc)\n    // console.log(state1)\n    // Here you listen to granular document updates and store them in the database\n    // You don't have to do this, but it ensures that you don't lose content when the server crashes\n    // See https://github.com/yjs/yjs#Document-Updates for documentation on how to encode\n    // document updates\n  },\n  writeState: (string, doc) => {\n    // This is called when all connections to the document are closed.\n    // In the future, this method might also be called in intervals or after a certain number of updates.\n    return new Promise(resolve => {\n      // console.log('writeState ', string)\n      // When the returned Promise resolves, the document will be destroyed.\n      // So make sure that the document really has been written to the database.\n      resolve()\n    })\n  }\n})\n\nserver.listen(port);\n\nconsole.log(`Listening to http://localhost:${port} ${production ? '(production)' : ''}`)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1594713556019
  }
}