{"ast":null,"code":"/**\n * Utility module to work with urls.\n *\n * @module url\n */\nimport * as object from './object.js';\n/**\n * Parse query parameters from an url.\n *\n * @param {string} url\n * @return {Object<string,string>}\n */\n\nexport const decodeQueryParams = url => {\n  /**\n   * @type {Object<string,string>}\n   */\n  const query = {};\n  const urlQuerySplit = url.split('?');\n  const pairs = urlQuerySplit[urlQuerySplit.length - 1].split('&');\n\n  for (var i = 0; i < pairs.length; i++) {\n    const item = pairs[i];\n\n    if (item.length > 0) {\n      const pair = item.split('=');\n      query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '');\n    }\n  }\n\n  return query;\n};\n/**\n * @param {Object<string,string>} params\n * @return {string}\n */\n\nexport const encodeQueryParams = params => object.map(params, (val, key) => `${encodeURIComponent(key)}=${encodeURIComponent(val)}`).join('&');","map":{"version":3,"sources":["/Users/meeopp/Development/Others/editor-yjs/client/node_modules/lib0/url.js"],"names":["object","decodeQueryParams","url","query","urlQuerySplit","split","pairs","length","i","item","pair","decodeURIComponent","encodeQueryParams","params","map","val","key","encodeURIComponent","join"],"mappings":"AAAA;;;;;AAMA,OAAO,KAAKA,MAAZ,MAAwB,aAAxB;AAEA;;;;;;;AAMA,OAAO,MAAMC,iBAAiB,GAAGC,GAAG,IAAI;AACtC;;;AAGA,QAAMC,KAAK,GAAG,EAAd;AACA,QAAMC,aAAa,GAAGF,GAAG,CAACG,KAAJ,CAAU,GAAV,CAAtB;AACA,QAAMC,KAAK,GAAGF,aAAa,CAACA,aAAa,CAACG,MAAd,GAAuB,CAAxB,CAAb,CAAwCF,KAAxC,CAA8C,GAA9C,CAAd;;AACA,OAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACC,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;AACrC,UAAMC,IAAI,GAAGH,KAAK,CAACE,CAAD,CAAlB;;AACA,QAAIC,IAAI,CAACF,MAAL,GAAc,CAAlB,EAAqB;AACnB,YAAMG,IAAI,GAAGD,IAAI,CAACJ,KAAL,CAAW,GAAX,CAAb;AACAF,MAAAA,KAAK,CAACQ,kBAAkB,CAACD,IAAI,CAAC,CAAD,CAAL,CAAnB,CAAL,GAAqCC,kBAAkB,CAACD,IAAI,CAAC,CAAD,CAAJ,IAAW,EAAZ,CAAvD;AACD;AACF;;AACD,SAAOP,KAAP;AACD,CAfM;AAiBP;;;;;AAIA,OAAO,MAAMS,iBAAiB,GAAGC,MAAM,IACrCb,MAAM,CAACc,GAAP,CAAWD,MAAX,EAAmB,CAACE,GAAD,EAAMC,GAAN,KAAe,GAAEC,kBAAkB,CAACD,GAAD,CAAM,IAAGC,kBAAkB,CAACF,GAAD,CAAM,EAAvF,EAA0FG,IAA1F,CAA+F,GAA/F,CADK","sourcesContent":["/**\n * Utility module to work with urls.\n *\n * @module url\n */\n\nimport * as object from './object.js'\n\n/**\n * Parse query parameters from an url.\n *\n * @param {string} url\n * @return {Object<string,string>}\n */\nexport const decodeQueryParams = url => {\n  /**\n   * @type {Object<string,string>}\n   */\n  const query = {}\n  const urlQuerySplit = url.split('?')\n  const pairs = urlQuerySplit[urlQuerySplit.length - 1].split('&')\n  for (var i = 0; i < pairs.length; i++) {\n    const item = pairs[i]\n    if (item.length > 0) {\n      const pair = item.split('=')\n      query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '')\n    }\n  }\n  return query\n}\n\n/**\n * @param {Object<string,string>} params\n * @return {string}\n */\nexport const encodeQueryParams = params =>\n  object.map(params, (val, key) => `${encodeURIComponent(key)}=${encodeURIComponent(val)}`).join('&')\n"]},"metadata":{},"sourceType":"module"}