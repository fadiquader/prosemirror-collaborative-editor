{"ast":null,"code":"import * as Y from 'yjs'; // eslint-disable-line\n\nimport * as encoding from 'lib0/encoding.js';\nimport * as decoding from 'lib0/decoding.js';\nexport const messagePermissionDenied = 0;\n/**\n * @param {encoding.Encoder} encoder\n * @param {string} reason\n */\n\nexport const writePermissionDenied = (encoder, reason) => {\n  encoding.writeVarUint(encoder, messagePermissionDenied);\n  encoding.writeVarString(encoder, reason);\n};\n/**\n * @callback PermissionDeniedHandler\n * @param {any} y\n * @param {string} reason\n */\n\n/**\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} y\n * @param {PermissionDeniedHandler} permissionDeniedHandler\n */\n\nexport const readAuthMessage = (decoder, y, permissionDeniedHandler) => {\n  switch (decoding.readVarUint(decoder)) {\n    case messagePermissionDenied:\n      permissionDeniedHandler(y, decoding.readVarString(decoder));\n  }\n};","map":{"version":3,"sources":["/Users/meeopp/Development/Others/editor-yjs/client/node_modules/y-websocket/node_modules/y-protocols/auth.js"],"names":["Y","encoding","decoding","messagePermissionDenied","writePermissionDenied","encoder","reason","writeVarUint","writeVarString","readAuthMessage","decoder","y","permissionDeniedHandler","readVarUint","readVarString"],"mappings":"AACA,OAAO,KAAKA,CAAZ,MAAmB,KAAnB,C,CAAyB;;AACzB,OAAO,KAAKC,QAAZ,MAA0B,kBAA1B;AACA,OAAO,KAAKC,QAAZ,MAA0B,kBAA1B;AAEA,OAAO,MAAMC,uBAAuB,GAAG,CAAhC;AAEP;;;;;AAIA,OAAO,MAAMC,qBAAqB,GAAG,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACxDL,EAAAA,QAAQ,CAACM,YAAT,CAAsBF,OAAtB,EAA+BF,uBAA/B;AACAF,EAAAA,QAAQ,CAACO,cAAT,CAAwBH,OAAxB,EAAiCC,MAAjC;AACD,CAHM;AAKP;;;;;;AAMA;;;;;;;AAMA,OAAO,MAAMG,eAAe,GAAG,CAACC,OAAD,EAAUC,CAAV,EAAaC,uBAAb,KAAyC;AACtE,UAAQV,QAAQ,CAACW,WAAT,CAAqBH,OAArB,CAAR;AACE,SAAKP,uBAAL;AAA8BS,MAAAA,uBAAuB,CAACD,CAAD,EAAIT,QAAQ,CAACY,aAAT,CAAuBJ,OAAvB,CAAJ,CAAvB;AADhC;AAGD,CAJM","sourcesContent":["\nimport * as Y from 'yjs' // eslint-disable-line\nimport * as encoding from 'lib0/encoding.js'\nimport * as decoding from 'lib0/decoding.js'\n\nexport const messagePermissionDenied = 0\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {string} reason\n */\nexport const writePermissionDenied = (encoder, reason) => {\n  encoding.writeVarUint(encoder, messagePermissionDenied)\n  encoding.writeVarString(encoder, reason)\n}\n\n/**\n * @callback PermissionDeniedHandler\n * @param {any} y\n * @param {string} reason\n */\n\n/**\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} y\n * @param {PermissionDeniedHandler} permissionDeniedHandler\n */\nexport const readAuthMessage = (decoder, y, permissionDeniedHandler) => {\n  switch (decoding.readVarUint(decoder)) {\n    case messagePermissionDenied: permissionDeniedHandler(y, decoding.readVarString(decoder))\n  }\n}\n"]},"metadata":{},"sourceType":"module"}