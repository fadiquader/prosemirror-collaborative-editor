{"ast":null,"code":"/**\n * Common Math expressions.\n *\n * @module math\n */\nexport const floor = Math.floor;\nexport const ceil = Math.ceil;\nexport const abs = Math.abs;\nexport const imul = Math.imul;\nexport const round = Math.round;\nexport const log10 = Math.log10;\nexport const log2 = Math.log2;\nexport const log = Math.log;\nexport const sqrt = Math.sqrt;\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\n\nexport const add = (a, b) => a + b;\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\n\nexport const min = (a, b) => a < b ? a : b;\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\n\nexport const max = (a, b) => a > b ? a : b;\nexport const isNaN = Number.isNaN;\nexport const pow = Math.pow;\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\n\nexport const exp10 = exp => Math.pow(10, exp);\nexport const sign = Math.sign;\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\n\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0;","map":{"version":3,"sources":["/Users/meeopp/Development/Others/editor-yjs/client/node_modules/lib0/math.js"],"names":["floor","Math","ceil","abs","imul","round","log10","log2","log","sqrt","add","a","b","min","max","isNaN","Number","pow","exp10","exp","sign","isNegativeZero","n"],"mappings":"AAAA;;;;;AAMA,OAAO,MAAMA,KAAK,GAAGC,IAAI,CAACD,KAAnB;AACP,OAAO,MAAME,IAAI,GAAGD,IAAI,CAACC,IAAlB;AACP,OAAO,MAAMC,GAAG,GAAGF,IAAI,CAACE,GAAjB;AACP,OAAO,MAAMC,IAAI,GAAGH,IAAI,CAACG,IAAlB;AACP,OAAO,MAAMC,KAAK,GAAGJ,IAAI,CAACI,KAAnB;AACP,OAAO,MAAMC,KAAK,GAAGL,IAAI,CAACK,KAAnB;AACP,OAAO,MAAMC,IAAI,GAAGN,IAAI,CAACM,IAAlB;AACP,OAAO,MAAMC,GAAG,GAAGP,IAAI,CAACO,GAAjB;AACP,OAAO,MAAMC,IAAI,GAAGR,IAAI,CAACQ,IAAlB;AAEP;;;;;;;AAMA,OAAO,MAAMC,GAAG,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAA1B;AAEP;;;;;;;AAMA,OAAO,MAAMC,GAAG,GAAG,CAACF,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAJ,GAAQD,CAAR,GAAYC,CAAlC;AAEP;;;;;;;AAMA,OAAO,MAAME,GAAG,GAAG,CAACH,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAJ,GAAQD,CAAR,GAAYC,CAAlC;AAEP,OAAO,MAAMG,KAAK,GAAGC,MAAM,CAACD,KAArB;AAEP,OAAO,MAAME,GAAG,GAAGhB,IAAI,CAACgB,GAAjB;AACP;;;;;;;AAMA,OAAO,MAAMC,KAAK,GAAGC,GAAG,IAAIlB,IAAI,CAACgB,GAAL,CAAS,EAAT,EAAaE,GAAb,CAArB;AAEP,OAAO,MAAMC,IAAI,GAAGnB,IAAI,CAACmB,IAAlB;AAEP;;;;;AAIA,OAAO,MAAMC,cAAc,GAAGC,CAAC,IAAIA,CAAC,KAAK,CAAN,GAAUA,CAAC,GAAG,CAAd,GAAkB,IAAIA,CAAJ,GAAQ,CAAtD","sourcesContent":["/**\n * Common Math expressions.\n *\n * @module math\n */\n\nexport const floor = Math.floor\nexport const ceil = Math.ceil\nexport const abs = Math.abs\nexport const imul = Math.imul\nexport const round = Math.round\nexport const log10 = Math.log10\nexport const log2 = Math.log2\nexport const log = Math.log\nexport const sqrt = Math.sqrt\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nexport const add = (a, b) => a + b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nexport const min = (a, b) => a < b ? a : b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nexport const max = (a, b) => a > b ? a : b\n\nexport const isNaN = Number.isNaN\n\nexport const pow = Math.pow\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nexport const exp10 = exp => Math.pow(10, exp)\n\nexport const sign = Math.sign\n\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\n"]},"metadata":{},"sourceType":"module"}