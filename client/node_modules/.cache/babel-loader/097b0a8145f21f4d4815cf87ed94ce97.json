{"ast":null,"code":"/**\n * Utility module to create and manipulate Iterators.\n *\n * @module iterator\n */\n\n/**\n * @template T,R\n * @param {Iterator<T>} iterator\n * @param {function(T):R} f\n * @return {IterableIterator<R>}\n */\nexport const mapIterator = (iterator, f) => ({\n  /**\n   * @param {function(T):R} f\n   */\n  [Symbol.iterator]() {\n    return this;\n  },\n\n  // @ts-ignore\n  next() {\n    const r = iterator.next();\n    return {\n      value: r.done ? undefined : f(r.value),\n      done: r.done\n    };\n  }\n\n});\n/**\n * @template T\n * @param {function():IteratorResult<T>} next\n * @return {IterableIterator<T>}\n */\n\nexport const createIterator = next => ({\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator]() {\n    return this;\n  },\n\n  // @ts-ignore\n  next\n});\n/**\n * @template T\n * @param {Iterator<T>} iterator\n * @param {function(T):boolean} filter\n */\n\nexport const iteratorFilter = (iterator, filter) => createIterator(() => {\n  let res;\n\n  do {\n    res = iterator.next();\n  } while (!res.done && !filter(res.value));\n\n  return res;\n});\n/**\n * @template T,M\n * @param {Iterator<T>} iterator\n * @param {function(T):M} fmap\n */\n\nexport const iteratorMap = (iterator, fmap) => createIterator(() => {\n  const {\n    done,\n    value\n  } = iterator.next();\n  return {\n    done,\n    value: done ? undefined : fmap(value)\n  };\n});","map":{"version":3,"sources":["/Users/meeopp/Development/Others/editor-yjs/client/node_modules/lib0/iterator.js"],"names":["mapIterator","iterator","f","Symbol","next","r","value","done","undefined","createIterator","iteratorFilter","filter","res","iteratorMap","fmap"],"mappings":"AAAA;;;;;;AAMA;;;;;;AAMA,OAAO,MAAMA,WAAW,GAAG,CAACC,QAAD,EAAWC,CAAX,MAAkB;AAC3C;;;AAGA,GAACC,MAAM,CAACF,QAAR,IAAqB;AACnB,WAAO,IAAP;AACD,GAN0C;;AAO3C;AACAG,EAAAA,IAAI,GAAI;AACN,UAAMC,CAAC,GAAGJ,QAAQ,CAACG,IAAT,EAAV;AACA,WAAO;AAAEE,MAAAA,KAAK,EAAED,CAAC,CAACE,IAAF,GAASC,SAAT,GAAqBN,CAAC,CAACG,CAAC,CAACC,KAAH,CAA/B;AAA0CC,MAAAA,IAAI,EAAEF,CAAC,CAACE;AAAlD,KAAP;AACD;;AAX0C,CAAlB,CAApB;AAcP;;;;;;AAKA,OAAO,MAAME,cAAc,GAAGL,IAAI,KAAK;AACrC;;;AAGA,GAACD,MAAM,CAACF,QAAR,IAAqB;AACnB,WAAO,IAAP;AACD,GANoC;;AAOrC;AACAG,EAAAA;AARqC,CAAL,CAA3B;AAWP;;;;;;AAKA,OAAO,MAAMM,cAAc,GAAG,CAACT,QAAD,EAAWU,MAAX,KAAsBF,cAAc,CAAC,MAAM;AACvE,MAAIG,GAAJ;;AACA,KAAG;AACDA,IAAAA,GAAG,GAAGX,QAAQ,CAACG,IAAT,EAAN;AACD,GAFD,QAES,CAACQ,GAAG,CAACL,IAAL,IAAa,CAACI,MAAM,CAACC,GAAG,CAACN,KAAL,CAF7B;;AAGA,SAAOM,GAAP;AACD,CANiE,CAA3D;AAQP;;;;;;AAKA,OAAO,MAAMC,WAAW,GAAG,CAACZ,QAAD,EAAWa,IAAX,KAAoBL,cAAc,CAAC,MAAM;AAClE,QAAM;AAAEF,IAAAA,IAAF;AAAQD,IAAAA;AAAR,MAAkBL,QAAQ,CAACG,IAAT,EAAxB;AACA,SAAO;AAAEG,IAAAA,IAAF;AAAQD,IAAAA,KAAK,EAAEC,IAAI,GAAGC,SAAH,GAAeM,IAAI,CAACR,KAAD;AAAtC,GAAP;AACD,CAH4D,CAAtD","sourcesContent":["/**\n * Utility module to create and manipulate Iterators.\n *\n * @module iterator\n */\n\n/**\n * @template T,R\n * @param {Iterator<T>} iterator\n * @param {function(T):R} f\n * @return {IterableIterator<R>}\n */\nexport const mapIterator = (iterator, f) => ({\n  /**\n   * @param {function(T):R} f\n   */\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next () {\n    const r = iterator.next()\n    return { value: r.done ? undefined : f(r.value), done: r.done }\n  }\n})\n\n/**\n * @template T\n * @param {function():IteratorResult<T>} next\n * @return {IterableIterator<T>}\n */\nexport const createIterator = next => ({\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next\n})\n\n/**\n * @template T\n * @param {Iterator<T>} iterator\n * @param {function(T):boolean} filter\n */\nexport const iteratorFilter = (iterator, filter) => createIterator(() => {\n  let res\n  do {\n    res = iterator.next()\n  } while (!res.done && !filter(res.value))\n  return res\n})\n\n/**\n * @template T,M\n * @param {Iterator<T>} iterator\n * @param {function(T):M} fmap\n */\nexport const iteratorMap = (iterator, fmap) => createIterator(() => {\n  const { done, value } = iterator.next()\n  return { done, value: done ? undefined : fmap(value) }\n})\n"]},"metadata":{},"sourceType":"module"}