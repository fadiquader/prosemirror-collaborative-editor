{"ast":null,"code":"/**\n * Isomorphic logging module with support for colors!\n *\n * @module logging\n */\nimport * as env from './environment.js';\nimport * as symbol from './symbol.js';\nimport * as pair from './pair.js';\nimport * as dom from './dom.js';\nimport * as json from './json.js';\nimport * as map from './map.js';\nimport * as eventloop from './eventloop.js';\nimport * as math from './math.js';\nimport * as time from './time.js';\nimport * as func from './function.js';\nexport const BOLD = symbol.create();\nexport const UNBOLD = symbol.create();\nexport const BLUE = symbol.create();\nexport const GREY = symbol.create();\nexport const GREEN = symbol.create();\nexport const RED = symbol.create();\nexport const PURPLE = symbol.create();\nexport const ORANGE = symbol.create();\nexport const UNCOLOR = symbol.create();\n/**\n * @type {Object<Symbol,pair.Pair<string,string>>}\n */\n\nconst _browserStyleMap = {\n  [BOLD]: pair.create('font-weight', 'bold'),\n  [UNBOLD]: pair.create('font-weight', 'normal'),\n  [BLUE]: pair.create('color', 'blue'),\n  [GREEN]: pair.create('color', 'green'),\n  [GREY]: pair.create('color', 'grey'),\n  [RED]: pair.create('color', 'red'),\n  [PURPLE]: pair.create('color', 'purple'),\n  [ORANGE]: pair.create('color', 'orange'),\n  // not well supported in chrome when debugging node with inspector - TODO: deprecate\n  [UNCOLOR]: pair.create('color', 'black')\n};\nconst _nodeStyleMap = {\n  [BOLD]: '\\u001b[1m',\n  [UNBOLD]: '\\u001b[2m',\n  [BLUE]: '\\x1b[34m',\n  [GREEN]: '\\x1b[32m',\n  [GREY]: '\\u001b[37m',\n  [RED]: '\\x1b[31m',\n  [PURPLE]: '\\x1b[35m',\n  [ORANGE]: '\\x1b[38;5;208m',\n  [UNCOLOR]: '\\x1b[0m'\n};\n/* istanbul ignore next */\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\n\nconst computeBrowserLoggingArgs = args => {\n  const strBuilder = [];\n  const styles = [];\n  const currentStyle = map.create();\n  /**\n   * @type {Array<string|Object|number>}\n   */\n\n  let logArgs = []; // try with formatting until we find something unsupported\n\n  let i = 0;\n\n  for (; i < args.length; i++) {\n    const arg = args[i]; // @ts-ignore\n\n    const style = _browserStyleMap[arg];\n\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right);\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        const style = dom.mapToStyleString(currentStyle);\n\n        if (i > 0 || style.length > 0) {\n          strBuilder.push('%c' + arg);\n          styles.push(style);\n        } else {\n          strBuilder.push(arg);\n        }\n      } else {\n        break;\n      }\n    }\n  }\n\n  if (i > 0) {\n    // create logArgs with what we have so far\n    logArgs = styles;\n    logArgs.unshift(strBuilder.join(''));\n  } // append the rest\n\n\n  for (; i < args.length; i++) {\n    const arg = args[i];\n\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg);\n    }\n  }\n\n  return logArgs;\n};\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\n\n\nconst computeNodeLoggingArgs = args => {\n  const strBuilder = [];\n  const logArgs = []; // try with formatting until we find something unsupported\n\n  let i = 0;\n\n  for (; i < args.length; i++) {\n    const arg = args[i]; // @ts-ignore\n\n    const style = _nodeStyleMap[arg];\n\n    if (style !== undefined) {\n      strBuilder.push(style);\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        strBuilder.push(arg);\n      } else {\n        break;\n      }\n    }\n  }\n\n  if (i > 0) {\n    // create logArgs with what we have so far\n    strBuilder.push('\\x1b[0m');\n    logArgs.push(strBuilder.join(''));\n  } // append the rest\n\n\n  for (; i < args.length; i++) {\n    const arg = args[i];\n    /* istanbul ignore else */\n\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg);\n    }\n  }\n\n  return logArgs;\n};\n/* istanbul ignore next */\n\n\nconst computeLoggingArgs = env.isNode ? computeNodeLoggingArgs : computeBrowserLoggingArgs;\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\n\nexport const print = (...args) => {\n  console.log(...computeLoggingArgs(args));\n  /* istanbul ignore next */\n\n  vconsoles.forEach(vc => vc.print(args));\n};\n/* istanbul ignore next */\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\n\nexport const warn = (...args) => {\n  console.warn(...computeLoggingArgs(args));\n  args.unshift(ORANGE);\n  vconsoles.forEach(vc => vc.print(args));\n};\n/* istanbul ignore next */\n\n/**\n * @param {Error} err\n */\n\nexport const printError = err => {\n  console.error(err);\n  vconsoles.forEach(vc => vc.printError(err));\n};\n/* istanbul ignore next */\n\n/**\n * @param {string} url image location\n * @param {number} height height of the image in pixel\n */\n\nexport const printImg = (url, height) => {\n  if (env.isBrowser) {\n    console.log('%c                      ', `font-size: ${height}px; background-size: contain; background-repeat: no-repeat; background-image: url(${url})`); // console.log('%c                ', `font-size: ${height}x; background: url(${url}) no-repeat;`)\n  }\n\n  vconsoles.forEach(vc => vc.printImg(url, height));\n};\n/* istanbul ignore next */\n\n/**\n * @param {string} base64\n * @param {number} height\n */\n\nexport const printImgBase64 = (base64, height) => printImg(`data:image/gif;base64,${base64}`, height);\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\n\nexport const group = (...args) => {\n  console.group(...computeLoggingArgs(args));\n  /* istanbul ignore next */\n\n  vconsoles.forEach(vc => vc.group(args));\n};\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\n\nexport const groupCollapsed = (...args) => {\n  console.groupCollapsed(...computeLoggingArgs(args));\n  /* istanbul ignore next */\n\n  vconsoles.forEach(vc => vc.groupCollapsed(args));\n};\nexport const groupEnd = () => {\n  console.groupEnd();\n  /* istanbul ignore next */\n\n  vconsoles.forEach(vc => vc.groupEnd());\n};\n/* istanbul ignore next */\n\n/**\n * @param {function():Node} createNode\n */\n\nexport const printDom = createNode => vconsoles.forEach(vc => vc.printDom(createNode()));\n/* istanbul ignore next */\n\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {number} height\n */\n\nexport const printCanvas = (canvas, height) => printImg(canvas.toDataURL(), height);\nexport const vconsoles = new Set();\n/* istanbul ignore next */\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<Element>}\n */\n\nconst _computeLineSpans = args => {\n  const spans = [];\n  const currentStyle = new Map(); // try with formatting until we find something unsupported\n\n  let i = 0;\n\n  for (; i < args.length; i++) {\n    const arg = args[i]; // @ts-ignore\n\n    const style = _browserStyleMap[arg];\n\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right);\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        // @ts-ignore\n        const span = dom.element('span', [pair.create('style', dom.mapToStyleString(currentStyle))], [dom.text(arg)]);\n\n        if (span.innerHTML === '') {\n          span.innerHTML = '&nbsp;';\n        }\n\n        spans.push(span);\n      } else {\n        break;\n      }\n    }\n  } // append the rest\n\n\n  for (; i < args.length; i++) {\n    let content = args[i];\n\n    if (!(content instanceof Symbol)) {\n      if (content.constructor !== String && content.constructor !== Number) {\n        content = ' ' + json.stringify(content) + ' ';\n      }\n\n      spans.push(dom.element('span', [], [dom.text(\n      /** @type {string} */\n      content)]));\n    }\n  }\n\n  return spans;\n};\n\nconst lineStyle = 'font-family:monospace;border-bottom:1px solid #e2e2e2;padding:2px;';\n/* istanbul ignore next */\n\nexport class VConsole {\n  /**\n   * @param {Element} dom\n   */\n  constructor(dom) {\n    this.dom = dom;\n    /**\n     * @type {Element}\n     */\n\n    this.ccontainer = this.dom;\n    this.depth = 0;\n    vconsoles.add(this);\n  }\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   * @param {boolean} collapsed\n   */\n\n\n  group(args, collapsed = false) {\n    eventloop.enqueue(() => {\n      const triangleDown = dom.element('span', [pair.create('hidden', collapsed), pair.create('style', 'color:grey;font-size:120%;')], [dom.text('▼')]);\n      const triangleRight = dom.element('span', [pair.create('hidden', !collapsed), pair.create('style', 'color:grey;font-size:125%;')], [dom.text('▶')]);\n      const content = dom.element('div', [pair.create('style', `${lineStyle};padding-left:${this.depth * 10}px`)], [triangleDown, triangleRight, dom.text(' ')].concat(_computeLineSpans(args)));\n      const nextContainer = dom.element('div', [pair.create('hidden', collapsed)]);\n      const nextLine = dom.element('div', [], [content, nextContainer]);\n      dom.append(this.ccontainer, [nextLine]);\n      this.ccontainer = nextContainer;\n      this.depth++; // when header is clicked, collapse/uncollapse container\n\n      dom.addEventListener(content, 'click', event => {\n        nextContainer.toggleAttribute('hidden');\n        triangleDown.toggleAttribute('hidden');\n        triangleRight.toggleAttribute('hidden');\n      });\n    });\n  }\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n\n\n  groupCollapsed(args) {\n    this.group(args, true);\n  }\n\n  groupEnd() {\n    eventloop.enqueue(() => {\n      if (this.depth > 0) {\n        this.depth--; // @ts-ignore\n\n        this.ccontainer = this.ccontainer.parentElement.parentElement;\n      }\n    });\n  }\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n\n\n  print(args) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [dom.element('div', [pair.create('style', `${lineStyle};padding-left:${this.depth * 10}px`)], _computeLineSpans(args))]);\n    });\n  }\n  /**\n   * @param {Error} err\n   */\n\n\n  printError(err) {\n    this.print([RED, BOLD, err.toString()]);\n  }\n  /**\n   * @param {string} url\n   * @param {number} height\n   */\n\n\n  printImg(url, height) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [dom.element('img', [pair.create('src', url), pair.create('height', `${math.round(height * 1.5)}px`)])]);\n    });\n  }\n  /**\n   * @param {Node} node\n   */\n\n\n  printDom(node) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [node]);\n    });\n  }\n\n  destroy() {\n    eventloop.enqueue(() => {\n      vconsoles.delete(this);\n    });\n  }\n\n}\n/* istanbul ignore next */\n\n/**\n * @param {Element} dom\n */\n\nexport const createVConsole = dom => new VConsole(dom);\nconst loggingColors = [GREEN, PURPLE, ORANGE, BLUE];\nlet nextColor = 0;\nlet lastLoggingTime = time.getUnixTime();\n/**\n * @param {string} moduleName\n * @return {function(...any)}\n */\n\nexport const createModuleLogger = moduleName => {\n  const color = loggingColors[nextColor];\n  const debugRegexVar = env.getVariable('log');\n  const doLogging = debugRegexVar !== null && (debugRegexVar === '*' || debugRegexVar === 'true' || new RegExp(debugRegexVar, 'gi').test(moduleName));\n  nextColor = (nextColor + 1) % loggingColors.length;\n  moduleName += ': ';\n  return !doLogging ? func.nop : (...args) => {\n    const timeNow = time.getUnixTime();\n    const timeDiff = timeNow - lastLoggingTime;\n    lastLoggingTime = timeNow;\n    print(color, moduleName, UNCOLOR, ...args.map(arg => typeof arg === 'string' || typeof arg === 'symbol' ? arg : JSON.stringify(arg)), color, ' +' + timeDiff + 'ms');\n  };\n};","map":{"version":3,"sources":["/Users/meeopp/Development/Others/editor-yjs/client/node_modules/lib0/logging.js"],"names":["env","symbol","pair","dom","json","map","eventloop","math","time","func","BOLD","create","UNBOLD","BLUE","GREY","GREEN","RED","PURPLE","ORANGE","UNCOLOR","_browserStyleMap","_nodeStyleMap","computeBrowserLoggingArgs","args","strBuilder","styles","currentStyle","logArgs","i","length","arg","style","undefined","set","left","right","constructor","String","Number","mapToStyleString","push","unshift","join","Symbol","computeNodeLoggingArgs","computeLoggingArgs","isNode","print","console","log","vconsoles","forEach","vc","warn","printError","err","error","printImg","url","height","isBrowser","printImgBase64","base64","group","groupCollapsed","groupEnd","printDom","createNode","printCanvas","canvas","toDataURL","Set","_computeLineSpans","spans","Map","span","element","text","innerHTML","content","stringify","lineStyle","VConsole","ccontainer","depth","add","collapsed","enqueue","triangleDown","triangleRight","concat","nextContainer","nextLine","append","addEventListener","event","toggleAttribute","parentElement","toString","round","node","destroy","delete","createVConsole","loggingColors","nextColor","lastLoggingTime","getUnixTime","createModuleLogger","moduleName","color","debugRegexVar","getVariable","doLogging","RegExp","test","nop","timeNow","timeDiff","JSON"],"mappings":"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","sourcesContent":["/**\n * Isomorphic logging module with support for colors!\n *\n * @module logging\n */\n\nimport * as env from './environment.js'\nimport * as symbol from './symbol.js'\nimport * as pair from './pair.js'\nimport * as dom from './dom.js'\nimport * as json from './json.js'\nimport * as map from './map.js'\nimport * as eventloop from './eventloop.js'\nimport * as math from './math.js'\nimport * as time from './time.js'\nimport * as func from './function.js'\n\nexport const BOLD = symbol.create()\nexport const UNBOLD = symbol.create()\nexport const BLUE = symbol.create()\nexport const GREY = symbol.create()\nexport const GREEN = symbol.create()\nexport const RED = symbol.create()\nexport const PURPLE = symbol.create()\nexport const ORANGE = symbol.create()\nexport const UNCOLOR = symbol.create()\n\n/**\n * @type {Object<Symbol,pair.Pair<string,string>>}\n */\nconst _browserStyleMap = {\n  [BOLD]: pair.create('font-weight', 'bold'),\n  [UNBOLD]: pair.create('font-weight', 'normal'),\n  [BLUE]: pair.create('color', 'blue'),\n  [GREEN]: pair.create('color', 'green'),\n  [GREY]: pair.create('color', 'grey'),\n  [RED]: pair.create('color', 'red'),\n  [PURPLE]: pair.create('color', 'purple'),\n  [ORANGE]: pair.create('color', 'orange'), // not well supported in chrome when debugging node with inspector - TODO: deprecate\n  [UNCOLOR]: pair.create('color', 'black')\n}\n\nconst _nodeStyleMap = {\n  [BOLD]: '\\u001b[1m',\n  [UNBOLD]: '\\u001b[2m',\n  [BLUE]: '\\x1b[34m',\n  [GREEN]: '\\x1b[32m',\n  [GREY]: '\\u001b[37m',\n  [RED]: '\\x1b[31m',\n  [PURPLE]: '\\x1b[35m',\n  [ORANGE]: '\\x1b[38;5;208m',\n  [UNCOLOR]: '\\x1b[0m'\n}\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\nconst computeBrowserLoggingArgs = args => {\n  const strBuilder = []\n  const styles = []\n  const currentStyle = map.create()\n  /**\n   * @type {Array<string|Object|number>}\n   */\n  let logArgs = []\n  // try with formatting until we find something unsupported\n  let i = 0\n\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        const style = dom.mapToStyleString(currentStyle)\n        if (i > 0 || style.length > 0) {\n          strBuilder.push('%c' + arg)\n          styles.push(style)\n        } else {\n          strBuilder.push(arg)\n        }\n      } else {\n        break\n      }\n    }\n  }\n\n  if (i > 0) {\n    // create logArgs with what we have so far\n    logArgs = styles\n    logArgs.unshift(strBuilder.join(''))\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg)\n    }\n  }\n  return logArgs\n}\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\nconst computeNodeLoggingArgs = args => {\n  const strBuilder = []\n  const logArgs = []\n\n  // try with formatting until we find something unsupported\n  let i = 0\n\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _nodeStyleMap[arg]\n    if (style !== undefined) {\n      strBuilder.push(style)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        strBuilder.push(arg)\n      } else {\n        break\n      }\n    }\n  }\n  if (i > 0) {\n    // create logArgs with what we have so far\n    strBuilder.push('\\x1b[0m')\n    logArgs.push(strBuilder.join(''))\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    /* istanbul ignore else */\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg)\n    }\n  }\n  return logArgs\n}\n\n/* istanbul ignore next */\nconst computeLoggingArgs = env.isNode ? computeNodeLoggingArgs : computeBrowserLoggingArgs\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const print = (...args) => {\n  console.log(...computeLoggingArgs(args))\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.print(args))\n}\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const warn = (...args) => {\n  console.warn(...computeLoggingArgs(args))\n  args.unshift(ORANGE)\n  vconsoles.forEach(vc => vc.print(args))\n}\n\n/* istanbul ignore next */\n/**\n * @param {Error} err\n */\nexport const printError = err => {\n  console.error(err)\n  vconsoles.forEach(vc => vc.printError(err))\n}\n\n/* istanbul ignore next */\n/**\n * @param {string} url image location\n * @param {number} height height of the image in pixel\n */\nexport const printImg = (url, height) => {\n  if (env.isBrowser) {\n    console.log('%c                      ', `font-size: ${height}px; background-size: contain; background-repeat: no-repeat; background-image: url(${url})`)\n    // console.log('%c                ', `font-size: ${height}x; background: url(${url}) no-repeat;`)\n  }\n  vconsoles.forEach(vc => vc.printImg(url, height))\n}\n\n/* istanbul ignore next */\n/**\n * @param {string} base64\n * @param {number} height\n */\nexport const printImgBase64 = (base64, height) => printImg(`data:image/gif;base64,${base64}`, height)\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const group = (...args) => {\n  console.group(...computeLoggingArgs(args))\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.group(args))\n}\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const groupCollapsed = (...args) => {\n  console.groupCollapsed(...computeLoggingArgs(args))\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.groupCollapsed(args))\n}\n\nexport const groupEnd = () => {\n  console.groupEnd()\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.groupEnd())\n}\n\n/* istanbul ignore next */\n/**\n * @param {function():Node} createNode\n */\nexport const printDom = createNode =>\n  vconsoles.forEach(vc => vc.printDom(createNode()))\n\n/* istanbul ignore next */\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {number} height\n */\nexport const printCanvas = (canvas, height) => printImg(canvas.toDataURL(), height)\n\nexport const vconsoles = new Set()\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<Element>}\n */\nconst _computeLineSpans = args => {\n  const spans = []\n  const currentStyle = new Map()\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        // @ts-ignore\n        const span = dom.element('span', [pair.create('style', dom.mapToStyleString(currentStyle))], [dom.text(arg)])\n        if (span.innerHTML === '') {\n          span.innerHTML = '&nbsp;'\n        }\n        spans.push(span)\n      } else {\n        break\n      }\n    }\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    let content = args[i]\n    if (!(content instanceof Symbol)) {\n      if (content.constructor !== String && content.constructor !== Number) {\n        content = ' ' + json.stringify(content) + ' '\n      }\n      spans.push(dom.element('span', [], [dom.text(/** @type {string} */ (content))]))\n    }\n  }\n  return spans\n}\n\nconst lineStyle = 'font-family:monospace;border-bottom:1px solid #e2e2e2;padding:2px;'\n\n/* istanbul ignore next */\nexport class VConsole {\n  /**\n   * @param {Element} dom\n   */\n  constructor (dom) {\n    this.dom = dom\n    /**\n     * @type {Element}\n     */\n    this.ccontainer = this.dom\n    this.depth = 0\n    vconsoles.add(this)\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   * @param {boolean} collapsed\n   */\n  group (args, collapsed = false) {\n    eventloop.enqueue(() => {\n      const triangleDown = dom.element('span', [pair.create('hidden', collapsed), pair.create('style', 'color:grey;font-size:120%;')], [dom.text('▼')])\n      const triangleRight = dom.element('span', [pair.create('hidden', !collapsed), pair.create('style', 'color:grey;font-size:125%;')], [dom.text('▶')])\n      const content = dom.element('div', [pair.create('style', `${lineStyle};padding-left:${this.depth * 10}px`)], [triangleDown, triangleRight, dom.text(' ')].concat(_computeLineSpans(args)))\n      const nextContainer = dom.element('div', [pair.create('hidden', collapsed)])\n      const nextLine = dom.element('div', [], [content, nextContainer])\n      dom.append(this.ccontainer, [nextLine])\n      this.ccontainer = nextContainer\n      this.depth++\n      // when header is clicked, collapse/uncollapse container\n      dom.addEventListener(content, 'click', event => {\n        nextContainer.toggleAttribute('hidden')\n        triangleDown.toggleAttribute('hidden')\n        triangleRight.toggleAttribute('hidden')\n      })\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  groupCollapsed (args) {\n    this.group(args, true)\n  }\n\n  groupEnd () {\n    eventloop.enqueue(() => {\n      if (this.depth > 0) {\n        this.depth--\n        // @ts-ignore\n        this.ccontainer = this.ccontainer.parentElement.parentElement\n      }\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  print (args) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [dom.element('div', [pair.create('style', `${lineStyle};padding-left:${this.depth * 10}px`)], _computeLineSpans(args))])\n    })\n  }\n\n  /**\n   * @param {Error} err\n   */\n  printError (err) {\n    this.print([RED, BOLD, err.toString()])\n  }\n\n  /**\n   * @param {string} url\n   * @param {number} height\n   */\n  printImg (url, height) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [dom.element('img', [pair.create('src', url), pair.create('height', `${math.round(height * 1.5)}px`)])])\n    })\n  }\n\n  /**\n   * @param {Node} node\n   */\n  printDom (node) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [node])\n    })\n  }\n\n  destroy () {\n    eventloop.enqueue(() => {\n      vconsoles.delete(this)\n    })\n  }\n}\n\n/* istanbul ignore next */\n/**\n * @param {Element} dom\n */\nexport const createVConsole = dom => new VConsole(dom)\n\nconst loggingColors = [GREEN, PURPLE, ORANGE, BLUE]\nlet nextColor = 0\nlet lastLoggingTime = time.getUnixTime()\n\n/**\n * @param {string} moduleName\n * @return {function(...any)}\n */\nexport const createModuleLogger = moduleName => {\n  const color = loggingColors[nextColor]\n  const debugRegexVar = env.getVariable('log')\n  const doLogging = debugRegexVar !== null && (debugRegexVar === '*' || debugRegexVar === 'true' || new RegExp(debugRegexVar, 'gi').test(moduleName))\n  nextColor = (nextColor + 1) % loggingColors.length\n  moduleName += ': '\n\n  return !doLogging ? func.nop : (...args) => {\n    const timeNow = time.getUnixTime()\n    const timeDiff = timeNow - lastLoggingTime\n    lastLoggingTime = timeNow\n    print(color, moduleName, UNCOLOR, ...args.map(arg => (typeof arg === 'string' || typeof arg === 'symbol') ? arg : JSON.stringify(arg)), color, ' +' + timeDiff + 'ms')\n  }\n}\n"]},"metadata":{},"sourceType":"module"}