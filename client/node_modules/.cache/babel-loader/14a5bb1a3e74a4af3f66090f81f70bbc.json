{"ast":null,"code":"import * as Y from 'yjs';\nimport { Decoration, DecorationSet } from 'prosemirror-view'; // eslint-disable-line\n\nimport { Plugin, PluginKey } from 'prosemirror-state'; // eslint-disable-line\n\nimport { Awareness } from 'y-protocols/awareness.js'; // eslint-disable-line\n\nimport { ySyncPluginKey } from './sync-plugin.js';\nimport { absolutePositionToRelativePosition, relativePositionToAbsolutePosition, setMeta } from '../lib.js';\nimport * as math from 'lib0/math.js';\n/**\n * The unique prosemirror plugin key for cursorPlugin.type\n *\n * @public\n */\n\nexport const yCursorPluginKey = new PluginKey('yjs-cursor');\n/**\n * Default generator for a cursor element\n *\n * @param {any} user user data\n * @return HTMLElement\n */\n\nexport const defaultCursorBuilder = user => {\n  const cursor = document.createElement('span');\n  cursor.classList.add('ProseMirror-yjs-cursor');\n  cursor.setAttribute('style', `border-color: ${user.color}`);\n  const userDiv = document.createElement('div');\n  userDiv.setAttribute('style', `background-color: ${user.color}`);\n  userDiv.insertBefore(document.createTextNode(user.name), null);\n  cursor.insertBefore(userDiv, null);\n  return cursor;\n};\n/**\n * @param {any} state\n * @param {Awareness} awareness\n * @return {any} DecorationSet\n */\n\nexport const createDecorations = (state, awareness, createCursor) => {\n  const ystate = ySyncPluginKey.getState(state);\n  const y = ystate.doc;\n  const decorations = [];\n\n  if (ystate.snapshot != null || ystate.prevSnapshot != null || ystate.binding === null) {\n    // do not render cursors while snapshot is active\n    return DecorationSet.create(state.doc, []);\n  }\n\n  awareness.getStates().forEach((aw, clientId) => {\n    if (clientId === y.clientID) {\n      return;\n    }\n\n    if (aw.cursor != null) {\n      const user = aw.user || {};\n\n      if (user.color == null) {\n        user.color = '#ffa500';\n      }\n\n      if (user.name == null) {\n        user.name = `User: ${clientId}`;\n      }\n\n      let anchor = relativePositionToAbsolutePosition(y, ystate.type, Y.createRelativePositionFromJSON(aw.cursor.anchor), ystate.binding.mapping);\n      let head = relativePositionToAbsolutePosition(y, ystate.type, Y.createRelativePositionFromJSON(aw.cursor.head), ystate.binding.mapping);\n\n      if (anchor !== null && head !== null) {\n        const maxsize = math.max(state.doc.content.size - 1, 0);\n        anchor = math.min(anchor, maxsize);\n        head = math.min(head, maxsize);\n        decorations.push(Decoration.widget(head, () => createCursor(user), {\n          key: clientId + '',\n          side: 10\n        }));\n        const from = math.min(anchor, head);\n        const to = math.max(anchor, head);\n        decorations.push(Decoration.inline(from, to, {\n          style: `background-color: ${user.color}70`\n        }, {\n          inclusiveEnd: true,\n          inclusiveStart: false\n        }));\n      }\n    }\n  });\n  return DecorationSet.create(state.doc, decorations);\n};\n/**\n * A prosemirror plugin that listens to awareness information on Yjs.\n * This requires that a `prosemirrorPlugin` is also bound to the prosemirror.\n *\n * @public\n * @param {Awareness} awareness\n * @param {object} [opts]\n * @param {function(any):HTMLElement} [opts.cursorBuilder]\n * @param {function(any):any} [opts.getSelection]\n * @return {any}\n */\n\nexport const yCursorPlugin = (awareness, {\n  cursorBuilder = defaultCursorBuilder,\n  getSelection = state => state.selection\n} = {}) => new Plugin({\n  key: yCursorPluginKey,\n  state: {\n    init(_, state) {\n      return createDecorations(state, awareness, cursorBuilder);\n    },\n\n    apply(tr, prevState, oldState, newState) {\n      const ystate = ySyncPluginKey.getState(newState);\n      const yCursorState = tr.getMeta(yCursorPluginKey);\n\n      if (ystate && ystate.isChangeOrigin || yCursorState && yCursorState.awarenessUpdated) {\n        return createDecorations(newState, awareness, cursorBuilder);\n      }\n\n      return prevState.map(tr.mapping, tr.doc);\n    }\n\n  },\n  props: {\n    decorations: state => {\n      return yCursorPluginKey.getState(state);\n    }\n  },\n  view: view => {\n    const awarenessListener = () => {\n      // @ts-ignore\n      if (view.docView) {\n        setMeta(view, yCursorPluginKey, {\n          awarenessUpdated: true\n        });\n      }\n    };\n\n    const updateCursorInfo = () => {\n      const ystate = ySyncPluginKey.getState(view.state); // @note We make implicit checks when checking for the cursor property\n\n      const current = awareness.getLocalState() || {};\n\n      if (view.hasFocus() && ystate.binding !== null) {\n        const selection = getSelection(view.state);\n        /**\n         * @type {Y.RelativePosition}\n         */\n\n        const anchor = absolutePositionToRelativePosition(selection.anchor, ystate.type, ystate.binding.mapping);\n        /**\n         * @type {Y.RelativePosition}\n         */\n\n        const head = absolutePositionToRelativePosition(selection.head, ystate.type, ystate.binding.mapping);\n\n        if (current.cursor == null || !Y.compareRelativePositions(Y.createRelativePositionFromJSON(current.cursor.anchor), anchor) || !Y.compareRelativePositions(Y.createRelativePositionFromJSON(current.cursor.head), head)) {\n          awareness.setLocalStateField('cursor', {\n            anchor,\n            head\n          });\n        }\n      } else if (current.cursor != null) {\n        awareness.setLocalStateField('cursor', null);\n      }\n    };\n\n    awareness.on('change', awarenessListener);\n    view.dom.addEventListener('focusin', updateCursorInfo);\n    view.dom.addEventListener('focusout', updateCursorInfo);\n    return {\n      update: updateCursorInfo,\n      destroy: () => {\n        awareness.off('change', awarenessListener);\n        awareness.setLocalStateField('cursor', null);\n      }\n    };\n  }\n});","map":{"version":3,"sources":["/Users/meeopp/Development/Others/editor-yjs/client/node_modules/y-prosemirror/src/plugins/cursor-plugin.js"],"names":["Y","Decoration","DecorationSet","Plugin","PluginKey","Awareness","ySyncPluginKey","absolutePositionToRelativePosition","relativePositionToAbsolutePosition","setMeta","math","yCursorPluginKey","defaultCursorBuilder","user","cursor","document","createElement","classList","add","setAttribute","color","userDiv","insertBefore","createTextNode","name","createDecorations","state","awareness","createCursor","ystate","getState","y","doc","decorations","snapshot","prevSnapshot","binding","create","getStates","forEach","aw","clientId","clientID","anchor","type","createRelativePositionFromJSON","mapping","head","maxsize","max","content","size","min","push","widget","key","side","from","to","inline","style","inclusiveEnd","inclusiveStart","yCursorPlugin","cursorBuilder","getSelection","selection","init","_","apply","tr","prevState","oldState","newState","yCursorState","getMeta","isChangeOrigin","awarenessUpdated","map","props","view","awarenessListener","docView","updateCursorInfo","current","getLocalState","hasFocus","compareRelativePositions","setLocalStateField","on","dom","addEventListener","update","destroy","off"],"mappings":"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","sourcesContent":["\nimport * as Y from 'yjs'\nimport { Decoration, DecorationSet } from 'prosemirror-view' // eslint-disable-line\nimport { Plugin, PluginKey } from 'prosemirror-state' // eslint-disable-line\nimport { Awareness } from 'y-protocols/awareness.js' // eslint-disable-line\nimport { ySyncPluginKey } from './sync-plugin.js'\nimport { absolutePositionToRelativePosition, relativePositionToAbsolutePosition, setMeta } from '../lib.js'\n\nimport * as math from 'lib0/math.js'\n\n/**\n * The unique prosemirror plugin key for cursorPlugin.type\n *\n * @public\n */\nexport const yCursorPluginKey = new PluginKey('yjs-cursor')\n\n/**\n * Default generator for a cursor element\n *\n * @param {any} user user data\n * @return HTMLElement\n */\nexport const defaultCursorBuilder = user => {\n  const cursor = document.createElement('span')\n  cursor.classList.add('ProseMirror-yjs-cursor')\n  cursor.setAttribute('style', `border-color: ${user.color}`)\n  const userDiv = document.createElement('div')\n  userDiv.setAttribute('style', `background-color: ${user.color}`)\n  userDiv.insertBefore(document.createTextNode(user.name), null)\n  cursor.insertBefore(userDiv, null)\n  return cursor\n}\n\n/**\n * @param {any} state\n * @param {Awareness} awareness\n * @return {any} DecorationSet\n */\nexport const createDecorations = (state, awareness, createCursor) => {\n  const ystate = ySyncPluginKey.getState(state)\n  const y = ystate.doc\n  const decorations = []\n  if (ystate.snapshot != null || ystate.prevSnapshot != null || ystate.binding === null) {\n    // do not render cursors while snapshot is active\n    return DecorationSet.create(state.doc, [])\n  }\n  awareness.getStates().forEach((aw, clientId) => {\n    if (clientId === y.clientID) {\n      return\n    }\n    if (aw.cursor != null) {\n      const user = aw.user || {}\n      if (user.color == null) {\n        user.color = '#ffa500'\n      }\n      if (user.name == null) {\n        user.name = `User: ${clientId}`\n      }\n      let anchor = relativePositionToAbsolutePosition(y, ystate.type, Y.createRelativePositionFromJSON(aw.cursor.anchor), ystate.binding.mapping)\n      let head = relativePositionToAbsolutePosition(y, ystate.type, Y.createRelativePositionFromJSON(aw.cursor.head), ystate.binding.mapping)\n      if (anchor !== null && head !== null) {\n        const maxsize = math.max(state.doc.content.size - 1, 0)\n        anchor = math.min(anchor, maxsize)\n        head = math.min(head, maxsize)\n        decorations.push(Decoration.widget(head, () => createCursor(user), { key: clientId + '', side: 10 }))\n        const from = math.min(anchor, head)\n        const to = math.max(anchor, head)\n        decorations.push(Decoration.inline(from, to, { style: `background-color: ${user.color}70` }, { inclusiveEnd: true, inclusiveStart: false }))\n      }\n    }\n  })\n  return DecorationSet.create(state.doc, decorations)\n}\n\n/**\n * A prosemirror plugin that listens to awareness information on Yjs.\n * This requires that a `prosemirrorPlugin` is also bound to the prosemirror.\n *\n * @public\n * @param {Awareness} awareness\n * @param {object} [opts]\n * @param {function(any):HTMLElement} [opts.cursorBuilder]\n * @param {function(any):any} [opts.getSelection]\n * @return {any}\n */\nexport const yCursorPlugin = (awareness, { cursorBuilder = defaultCursorBuilder, getSelection = state => state.selection } = {}) => new Plugin({\n  key: yCursorPluginKey,\n  state: {\n    init (_, state) {\n      return createDecorations(state, awareness, cursorBuilder)\n    },\n    apply (tr, prevState, oldState, newState) {\n      const ystate = ySyncPluginKey.getState(newState)\n      const yCursorState = tr.getMeta(yCursorPluginKey)\n      if ((ystate && ystate.isChangeOrigin) || (yCursorState && yCursorState.awarenessUpdated)) {\n        return createDecorations(newState, awareness, cursorBuilder)\n      }\n      return prevState.map(tr.mapping, tr.doc)\n    }\n  },\n  props: {\n    decorations: state => {\n      return yCursorPluginKey.getState(state)\n    }\n  },\n  view: view => {\n    const awarenessListener = () => {\n      // @ts-ignore\n      if (view.docView) {\n        setMeta(view, yCursorPluginKey, { awarenessUpdated: true })\n      }\n    }\n    const updateCursorInfo = () => {\n      const ystate = ySyncPluginKey.getState(view.state)\n      // @note We make implicit checks when checking for the cursor property\n      const current = awareness.getLocalState() || {}\n      if (view.hasFocus() && ystate.binding !== null) {\n        const selection = getSelection(view.state)\n        /**\n         * @type {Y.RelativePosition}\n         */\n        const anchor = absolutePositionToRelativePosition(selection.anchor, ystate.type, ystate.binding.mapping)\n        /**\n         * @type {Y.RelativePosition}\n         */\n        const head = absolutePositionToRelativePosition(selection.head, ystate.type, ystate.binding.mapping)\n        if (current.cursor == null || !Y.compareRelativePositions(Y.createRelativePositionFromJSON(current.cursor.anchor), anchor) || !Y.compareRelativePositions(Y.createRelativePositionFromJSON(current.cursor.head), head)) {\n          awareness.setLocalStateField('cursor', {\n            anchor, head\n          })\n        }\n      } else if (current.cursor != null) {\n        awareness.setLocalStateField('cursor', null)\n      }\n    }\n    awareness.on('change', awarenessListener)\n    view.dom.addEventListener('focusin', updateCursorInfo)\n    view.dom.addEventListener('focusout', updateCursorInfo)\n    return {\n      update: updateCursorInfo,\n      destroy: () => {\n        awareness.off('change', awarenessListener)\n        awareness.setLocalStateField('cursor', null)\n      }\n    }\n  }\n})\n"]},"metadata":{},"sourceType":"module"}