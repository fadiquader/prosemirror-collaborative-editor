{"version":3,"file":"index.es.js","sources":["../src/history.js"],"sourcesContent":["import RopeSequence from \"rope-sequence\"\nimport {Mapping} from \"prosemirror-transform\"\nimport {Plugin, PluginKey} from \"prosemirror-state\"\n\n// ProseMirror's history isn't simply a way to roll back to a previous\n// state, because ProseMirror supports applying changes without adding\n// them to the history (for example during collaboration).\n//\n// To this end, each 'Branch' (one for the undo history and one for\n// the redo history) keeps an array of 'Items', which can optionally\n// hold a step (an actual undoable change), and always hold a position\n// map (which is needed to move changes below them to apply to the\n// current document).\n//\n// An item that has both a step and a selection bookmark is the start\n// of an 'event' — a group of changes that will be undone or redone at\n// once. (It stores only the bookmark, since that way we don't have to\n// provide a document until the selection is actually applied, which\n// is useful when compressing.)\n\n// Used to schedule history compression\nconst max_empty_items = 500\n\nclass Branch {\n  constructor(items, eventCount) {\n    this.items = items\n    this.eventCount = eventCount\n  }\n\n  // : (EditorState, bool) → ?{transform: Transform, selection: ?SelectionBookmark, remaining: Branch}\n  // Pop the latest event off the branch's history and apply it\n  // to a document transform.\n  popEvent(state, preserveItems) {\n    if (this.eventCount == 0) return null\n\n    let end = this.items.length\n    for (;; end--) {\n      let next = this.items.get(end - 1)\n      if (next.selection) { --end; break }\n    }\n\n    let remap, mapFrom\n    if (preserveItems) {\n      remap = this.remapping(end, this.items.length)\n      mapFrom = remap.maps.length\n    }\n    let transform = state.tr\n    let selection, remaining\n    let addAfter = [], addBefore = []\n\n    this.items.forEach((item, i) => {\n      if (!item.step) {\n        if (!remap) {\n          remap = this.remapping(end, i + 1)\n          mapFrom = remap.maps.length\n        }\n        mapFrom--\n        addBefore.push(item)\n        return\n      }\n\n      if (remap) {\n        addBefore.push(new Item(item.map))\n        let step = item.step.map(remap.slice(mapFrom)), map\n\n        if (step && transform.maybeStep(step).doc) {\n          map = transform.mapping.maps[transform.mapping.maps.length - 1]\n          addAfter.push(new Item(map, null, null, addAfter.length + addBefore.length))\n        }\n        mapFrom--\n        if (map) remap.appendMap(map, mapFrom)\n      } else {\n        transform.maybeStep(item.step)\n      }\n\n      if (item.selection) {\n        selection = remap ? item.selection.map(remap.slice(mapFrom)) : item.selection\n        remaining = new Branch(this.items.slice(0, end).append(addBefore.reverse().concat(addAfter)), this.eventCount - 1)\n        return false\n      }\n    }, this.items.length, 0)\n\n    return {remaining, transform, selection}\n  }\n\n  // : (Transform, ?SelectionBookmark, Object) → Branch\n  // Create a new branch with the given transform added.\n  addTransform(transform, selection, histOptions, preserveItems) {\n    let newItems = [], eventCount = this.eventCount\n    let oldItems = this.items, lastItem = !preserveItems && oldItems.length ? oldItems.get(oldItems.length - 1) : null\n\n    for (let i = 0; i < transform.steps.length; i++) {\n      let step = transform.steps[i].invert(transform.docs[i])\n      let item = new Item(transform.mapping.maps[i], step, selection), merged\n      if (merged = lastItem && lastItem.merge(item)) {\n        item = merged\n        if (i) newItems.pop()\n        else oldItems = oldItems.slice(0, oldItems.length - 1)\n      }\n      newItems.push(item)\n      if (selection) {\n        eventCount++\n        selection = null\n      }\n      if (!preserveItems) lastItem = item\n    }\n    let overflow = eventCount - histOptions.depth\n    if (overflow > DEPTH_OVERFLOW) {\n      oldItems = cutOffEvents(oldItems, overflow)\n      eventCount -= overflow\n    }\n    return new Branch(oldItems.append(newItems), eventCount)\n  }\n\n  remapping(from, to) {\n    let maps = new Mapping\n    this.items.forEach((item, i) => {\n      let mirrorPos = item.mirrorOffset != null && i - item.mirrorOffset >= from\n          ? maps.maps.length - item.mirrorOffset : null\n      maps.appendMap(item.map, mirrorPos)\n    }, from, to)\n    return maps\n  }\n\n  addMaps(array) {\n    if (this.eventCount == 0) return this\n    return new Branch(this.items.append(array.map(map => new Item(map))), this.eventCount)\n  }\n\n  // : (Transform, number)\n  // When the collab module receives remote changes, the history has\n  // to know about those, so that it can adjust the steps that were\n  // rebased on top of the remote changes, and include the position\n  // maps for the remote changes in its array of items.\n  rebased(rebasedTransform, rebasedCount) {\n    if (!this.eventCount) return this\n\n    let rebasedItems = [], start = Math.max(0, this.items.length - rebasedCount)\n\n    let mapping = rebasedTransform.mapping\n    let newUntil = rebasedTransform.steps.length\n    let eventCount = this.eventCount\n    this.items.forEach(item => { if (item.selection) eventCount-- }, start)\n\n    let iRebased = rebasedCount\n    this.items.forEach(item => {\n      let pos = mapping.getMirror(--iRebased)\n      if (pos == null) return\n      newUntil = Math.min(newUntil, pos)\n      let map = mapping.maps[pos]\n      if (item.step) {\n        let step = rebasedTransform.steps[pos].invert(rebasedTransform.docs[pos])\n        let selection = item.selection && item.selection.map(mapping.slice(iRebased + 1, pos))\n        if (selection) eventCount++\n        rebasedItems.push(new Item(map, step, selection))\n      } else {\n        rebasedItems.push(new Item(map))\n      }\n    }, start)\n\n    let newMaps = []\n    for (let i = rebasedCount; i < newUntil; i++)\n      newMaps.push(new Item(mapping.maps[i]))\n    let items = this.items.slice(0, start).append(newMaps).append(rebasedItems)\n    let branch = new Branch(items, eventCount)\n\n    if (branch.emptyItemCount() > max_empty_items)\n      branch = branch.compress(this.items.length - rebasedItems.length)\n    return branch\n  }\n\n  emptyItemCount() {\n    let count = 0\n    this.items.forEach(item => { if (!item.step) count++ })\n    return count\n  }\n\n  // Compressing a branch means rewriting it to push the air (map-only\n  // items) out. During collaboration, these naturally accumulate\n  // because each remote change adds one. The `upto` argument is used\n  // to ensure that only the items below a given level are compressed,\n  // because `rebased` relies on a clean, untouched set of items in\n  // order to associate old items with rebased steps.\n  compress(upto = this.items.length) {\n    let remap = this.remapping(0, upto), mapFrom = remap.maps.length\n    let items = [], events = 0\n    this.items.forEach((item, i) => {\n      if (i >= upto) {\n        items.push(item)\n        if (item.selection) events++\n      } else if (item.step) {\n        let step = item.step.map(remap.slice(mapFrom)), map = step && step.getMap()\n        mapFrom--\n        if (map) remap.appendMap(map, mapFrom)\n        if (step) {\n          let selection = item.selection && item.selection.map(remap.slice(mapFrom))\n          if (selection) events++\n          let newItem = new Item(map.invert(), step, selection), merged, last = items.length - 1\n          if (merged = items.length && items[last].merge(newItem))\n            items[last] = merged\n          else\n            items.push(newItem)\n        }\n      } else if (item.map) {\n        mapFrom--\n      }\n    }, this.items.length, 0)\n    return new Branch(RopeSequence.from(items.reverse()), events)\n  }\n}\n\nBranch.empty = new Branch(RopeSequence.empty, 0)\n\nfunction cutOffEvents(items, n) {\n  let cutPoint\n  items.forEach((item, i) => {\n    if (item.selection && (n-- == 0)) {\n      cutPoint = i\n      return false\n    }\n  })\n  return items.slice(cutPoint)\n}\n\nclass Item {\n  constructor(map, step, selection, mirrorOffset) {\n    // The (forward) step map for this item.\n    this.map = map\n    // The inverted step\n    this.step = step\n    // If this is non-null, this item is the start of a group, and\n    // this selection is the starting selection for the group (the one\n    // that was active before the first step was applied)\n    this.selection = selection\n    // If this item is the inverse of a previous mapping on the stack,\n    // this points at the inverse's offset\n    this.mirrorOffset = mirrorOffset\n  }\n\n  merge(other) {\n    if (this.step && other.step && !other.selection) {\n      let step = other.step.merge(this.step)\n      if (step) return new Item(step.getMap().invert(), step, this.selection)\n    }\n  }\n}\n\n// The value of the state field that tracks undo/redo history for that\n// state. Will be stored in the plugin state when the history plugin\n// is active.\nexport class HistoryState {\n  constructor(done, undone, prevRanges, prevTime) {\n    this.done = done\n    this.undone = undone\n    this.prevRanges = prevRanges\n    this.prevTime = prevTime\n  }\n}\n\nconst DEPTH_OVERFLOW = 20\n\n// : (HistoryState, EditorState, Transaction, Object)\n// Record a transformation in undo history.\nfunction applyTransaction(history, state, tr, options) {\n  let historyTr = tr.getMeta(historyKey), rebased\n  if (historyTr) return historyTr.historyState\n\n  if (tr.getMeta(closeHistoryKey)) history = new HistoryState(history.done, history.undone, null, 0)\n\n  let appended = tr.getMeta(\"appendedTransaction\")\n\n  if (tr.steps.length == 0) {\n    return history\n  } else if (appended && appended.getMeta(historyKey)) {\n    if (appended.getMeta(historyKey).redo)\n      return new HistoryState(history.done.addTransform(tr, null, options, mustPreserveItems(state)),\n                              history.undone, rangesFor(tr.mapping.maps[tr.steps.length - 1]), history.prevTime)\n    else\n      return new HistoryState(history.done, history.undone.addTransform(tr, null, options, mustPreserveItems(state)),\n                              null, history.prevTime)\n  } else if (tr.getMeta(\"addToHistory\") !== false && !(appended && appended.getMeta(\"addToHistory\") === false)) {\n    // Group transforms that occur in quick succession into one event.\n    let newGroup = history.prevTime == 0 || !appended && (history.prevTime < (tr.time || 0) - options.newGroupDelay ||\n                                                          !isAdjacentTo(tr, history.prevRanges))\n    let prevRanges = appended ? mapRanges(history.prevRanges, tr.mapping) : rangesFor(tr.mapping.maps[tr.steps.length - 1])\n    return new HistoryState(history.done.addTransform(tr, newGroup ? state.selection.getBookmark() : null,\n                                                      options, mustPreserveItems(state)),\n                            Branch.empty, prevRanges, tr.time)\n  } else if (rebased = tr.getMeta(\"rebased\")) {\n    // Used by the collab module to tell the history that some of its\n    // content has been rebased.\n    return new HistoryState(history.done.rebased(tr, rebased),\n                            history.undone.rebased(tr, rebased),\n                            mapRanges(history.prevRanges, tr.mapping), history.prevTime)\n  } else {\n    return new HistoryState(history.done.addMaps(tr.mapping.maps),\n                            history.undone.addMaps(tr.mapping.maps),\n                            mapRanges(history.prevRanges, tr.mapping), history.prevTime)\n  }\n}\n\nfunction isAdjacentTo(transform, prevRanges) {\n  if (!prevRanges) return false\n  if (!transform.docChanged) return true\n  let adjacent = false\n  transform.mapping.maps[0].forEach((start, end) => {\n    for (let i = 0; i < prevRanges.length; i += 2)\n      if (start <= prevRanges[i + 1] && end >= prevRanges[i])\n        adjacent = true\n  })\n  return adjacent\n}\n\nfunction rangesFor(map) {\n  let result = []\n  map.forEach((_from, _to, from, to) => result.push(from, to))\n  return result\n}\n\nfunction mapRanges(ranges, mapping) {\n  if (!ranges) return null\n  let result = []\n  for (let i = 0; i < ranges.length; i += 2) {\n    let from = mapping.map(ranges[i], 1), to = mapping.map(ranges[i + 1], -1)\n    if (from <= to) result.push(from, to)\n  }\n  return result\n}\n\n// : (HistoryState, EditorState, (tr: Transaction), bool)\n// Apply the latest event from one branch to the document and shift the event\n// onto the other branch.\nfunction histTransaction(history, state, dispatch, redo) {\n  let preserveItems = mustPreserveItems(state), histOptions = historyKey.get(state).spec.config\n  let pop = (redo ? history.undone : history.done).popEvent(state, preserveItems)\n  if (!pop) return\n\n  let selection = pop.selection.resolve(pop.transform.doc)\n  let added = (redo ? history.done : history.undone).addTransform(pop.transform, state.selection.getBookmark(),\n                                                                  histOptions, preserveItems)\n\n  let newHist = new HistoryState(redo ? added : pop.remaining, redo ? pop.remaining : added, null, 0)\n  dispatch(pop.transform.setSelection(selection).setMeta(historyKey, {redo, historyState: newHist}).scrollIntoView())\n}\n\nlet cachedPreserveItems = false, cachedPreserveItemsPlugins = null\n// Check whether any plugin in the given state has a\n// `historyPreserveItems` property in its spec, in which case we must\n// preserve steps exactly as they came in, so that they can be\n// rebased.\nfunction mustPreserveItems(state) {\n  let plugins = state.plugins\n  if (cachedPreserveItemsPlugins != plugins) {\n    cachedPreserveItems = false\n    cachedPreserveItemsPlugins = plugins\n    for (let i = 0; i < plugins.length; i++) if (plugins[i].spec.historyPreserveItems) {\n      cachedPreserveItems = true\n      break\n    }\n  }\n  return cachedPreserveItems\n}\n\n// :: (Transaction) → Transaction\n// Set a flag on the given transaction that will prevent further steps\n// from being appended to an existing history event (so that they\n// require a separate undo command to undo).\nexport function closeHistory(tr) {\n  return tr.setMeta(closeHistoryKey, true)\n}\n\nconst historyKey = new PluginKey(\"history\")\nconst closeHistoryKey = new PluginKey(\"closeHistory\")\n\n// :: (?Object) → Plugin\n// Returns a plugin that enables the undo history for an editor. The\n// plugin will track undo and redo stacks, which can be used with the\n// [`undo`](#history.undo) and [`redo`](#history.redo) commands.\n//\n// You can set an `\"addToHistory\"` [metadata\n// property](#state.Transaction.setMeta) of `false` on a transaction\n// to prevent it from being rolled back by undo.\n//\n//   config::-\n//   Supports the following configuration options:\n//\n//     depth:: ?number\n//     The amount of history events that are collected before the\n//     oldest events are discarded. Defaults to 100.\n//\n//     newGroupDelay:: ?number\n//     The delay between changes after which a new group should be\n//     started. Defaults to 500 (milliseconds). Note that when changes\n//     aren't adjacent, a new group is always started.\nexport function history(config) {\n  config = {depth: config && config.depth || 100,\n            newGroupDelay: config && config.newGroupDelay || 500}\n  return new Plugin({\n    key: historyKey,\n\n    state: {\n      init() {\n        return new HistoryState(Branch.empty, Branch.empty, null, 0)\n      },\n      apply(tr, hist, state) {\n        return applyTransaction(hist, state, tr, config)\n      }\n    },\n\n    config\n  })\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// A command function that undoes the last change, if any.\nexport function undo(state, dispatch) {\n  let hist = historyKey.getState(state)\n  if (!hist || hist.done.eventCount == 0) return false\n  if (dispatch) histTransaction(hist, state, dispatch, false)\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// A command function that redoes the last undone change, if any.\nexport function redo(state, dispatch) {\n  let hist = historyKey.getState(state)\n  if (!hist || hist.undone.eventCount == 0) return false\n  if (dispatch) histTransaction(hist, state, dispatch, true)\n  return true\n}\n\n// :: (EditorState) → number\n// The amount of undoable events available in a given state.\nexport function undoDepth(state) {\n  let hist = historyKey.getState(state)\n  return hist ? hist.done.eventCount : 0\n}\n\n// :: (EditorState) → number\n// The amount of redoable events available in a given editor state.\nexport function redoDepth(state) {\n  let hist = historyKey.getState(state)\n  return hist ? hist.undone.eventCount : 0\n}\n"],"names":["const","let","this"],"mappings":"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"}